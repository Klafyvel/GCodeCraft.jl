# This file is auto-generated. Please do not edit!
# Generation date: 2023-07-10T20:50:26.333

Any[
    (
        codetype="G",
        identifier=(0, 0, nothing),
        funname="G0",
        doc="    G0(;params...)\nAdd a straight line movement to the planner\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G000-G001.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: An absolute or relative coordinate on the X axis (in current units).\n* Y [Optional]: An absolute or relative coordinate on the Y axis (in current units).\n* Z [Optional]: An absolute or relative coordinate on the Z axis (in current units).\n* E [Optional]: An absolute or relative coordinate on the E (extruder) axis (in current units). The E axis describes the position of the filament in terms of input to the extruder feeder.\n* F [Optional]: The maximum movement rate of the move between the start and end point. The feedrate set here applies to subsequent moves that omit this parameter.\n* S [Optional]: Set the laser power for the move.\n\n\n# Description\nThe `G0` and `G1` commands add a linear move to the queue to be performed after all previous moves are completed. These commands yield control back to the command parser as soon as the move is queued, but they may delay the command parser while awaiting a slot in the queue.\n\nA linear move traces a straight line from one point to another, ensuring that the specified axes will arrive simultaneously at the given coordinates (by linear interpolation). The speed may change over time following an acceleration curve, according to the acceleration and jerk settings of the given axes.\n\nA command like `G1 F1000` sets the feedrate for all subsequent moves.\n\nBy convention, most G-code generators use `G0` for non-extrusion movements (those without the E axis) and `G1` for moves that include extrusion. This is meant to allow a kinematic system to, optionally, do a more rapid uninterpolated movement requiring much less calculation.\n\nFor Cartesians and Deltas the `G0` (rapid linear movement) command is (and must be) a direct alias for `G1` (rapid movement). On SCARA machines `G0` does a fast non-linear move. Marlin 2.0 introduces an option to maintain a separate default feedrate for `G0`. *Note: Slicers tend to override firmware feedrates!*\n\n\nSee also [`G2`](@ref), [`G3`](@ref), [`G5`](@ref), [`M82`](@ref), [`M83`](@ref) and [`G91`](@ref).",
    ),
    (
        codetype="G",
        identifier=(1, 0, nothing),
        funname="G1",
        doc="    G1(;params...)\nAdd a straight line movement to the planner\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G000-G001.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: An absolute or relative coordinate on the X axis (in current units).\n* Y [Optional]: An absolute or relative coordinate on the Y axis (in current units).\n* Z [Optional]: An absolute or relative coordinate on the Z axis (in current units).\n* E [Optional]: An absolute or relative coordinate on the E (extruder) axis (in current units). The E axis describes the position of the filament in terms of input to the extruder feeder.\n* F [Optional]: The maximum movement rate of the move between the start and end point. The feedrate set here applies to subsequent moves that omit this parameter.\n* S [Optional]: Set the laser power for the move.\n\n\n# Description\nThe `G0` and `G1` commands add a linear move to the queue to be performed after all previous moves are completed. These commands yield control back to the command parser as soon as the move is queued, but they may delay the command parser while awaiting a slot in the queue.\n\nA linear move traces a straight line from one point to another, ensuring that the specified axes will arrive simultaneously at the given coordinates (by linear interpolation). The speed may change over time following an acceleration curve, according to the acceleration and jerk settings of the given axes.\n\nA command like `G1 F1000` sets the feedrate for all subsequent moves.\n\nBy convention, most G-code generators use `G0` for non-extrusion movements (those without the E axis) and `G1` for moves that include extrusion. This is meant to allow a kinematic system to, optionally, do a more rapid uninterpolated movement requiring much less calculation.\n\nFor Cartesians and Deltas the `G0` (rapid linear movement) command is (and must be) a direct alias for `G1` (rapid movement). On SCARA machines `G0` does a fast non-linear move. Marlin 2.0 introduces an option to maintain a separate default feedrate for `G0`. *Note: Slicers tend to override firmware feedrates!*\n\n\nSee also [`G2`](@ref), [`G3`](@ref), [`G5`](@ref), [`M82`](@ref), [`M83`](@ref) and [`G91`](@ref).",
    ),
    (
        codetype="G",
        identifier=(10, 0, nothing),
        funname="G10",
        doc="    G10(;params...)\nRetract the filament\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G010.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Use `G10 S1` to do a swap retraction, before changing extruders. The subsequent [`G11`](/docs/gcode/G011.html) (after tool change) will do a swap recover. (Requires `EXTRUDERS` > 1)\n\n\n# Description\n\nRetract the filament according to settings of [`M207`](/docs/gcode/M207.html).\n\nFirmware retraction allows you to tune retraction at the machine level and can significantly reduce the size of G-code files.\n\nMultiple consecutive `G10` or `G10 S1` commands without a corresponding [`G11`](/docs/gcode/G011.html) or `G11 S1` will be ignored.\n\nPerforms two moves: a retract move at the retract feedrate/acceleration, and an optional Z lift at the maximum Z feedrate (travel acceleration).\n",
    ),
    (
        codetype="G",
        identifier=(11, 0, nothing),
        funname="G11",
        doc="    G11(;params...)\nRecover the filament with firmware-based retract.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G011.html).\n\n\n\n\n# Description\n\nUnretract (i.e., recover, prime) the filament according to settings of [`M208`](/docs/gcode/M208.html).\n\nMultiple consecutive `G11` or `G11 S1` commands without a corresponding [`G10`](/docs/gcode/G010.html) or `G10 S1` will be ignored.\n\n\"Performs two moves: An optional Z lower at the maximum Z feedrate (travel acceleration), and a recovery move at the recover feedrate (retract acceleration).\"\n\n",
    ),
    (
        codetype="G",
        identifier=(12, 0, nothing),
        funname="G12",
        doc="    G12(;params...)\nPerform the nozzle cleaning procedure.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G012.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Pattern style selection\n* R [Optional]: Radius of nozzle cleaning circle\n* S [Optional]: Number of repetitions of the pattern\n* T [Optional]: Number of triangles in the zigzag pattern\n* X [Optional]: Include X motion when cleaning with limited axes. (Leave out `X`, `Y`, and `Z` for non-limited cleaning.)\n* Y [Optional]: Include Y motion when cleaning with limited axes. (Leave out `X`, `Y`, and `Z` for non-limited cleaning.)\n* Z [Optional]: Include Z motion when cleaning with limited axes. (Leave out `X`, `Y`, and `Z` for non-limited cleaning.)\n\n\n# Description\n\nStart the nozzle cleaning process. Three types of cleaning patterns are supported: straight strokes, zigzags and circles. This feature requires a dedicated cleaning area on or outside the bed, but within reach of the nozzle. The pattern may be repeated as many times as desired.\n",
    ),
    (
        codetype="G",
        identifier=(17, 0, nothing),
        funname="G17",
        doc="    G17(;params...)\nSelect CNC workspace plane\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G017-G019.html).\n\n\n\n\n# Description\n\nSelect workspace plane XY, ZX, or YZ. Allows [`G2/G3`](/docs/gcode/G002-G003.html) and [`G5`](/docs/gcode/G005.html) to operate in the selected plane when `CNC_WORKSPACE_PLANES` is enabled.\n\n\nSee also [`G2`](@ref), [`G3`](@ref) and [`G5`](@ref).",
    ),
    (
        codetype="G",
        identifier=(18, 0, nothing),
        funname="G18",
        doc="    G18(;params...)\nSelect CNC workspace plane\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G017-G019.html).\n\n\n\n\n# Description\n\nSelect workspace plane XY, ZX, or YZ. Allows [`G2/G3`](/docs/gcode/G002-G003.html) and [`G5`](/docs/gcode/G005.html) to operate in the selected plane when `CNC_WORKSPACE_PLANES` is enabled.\n\n\nSee also [`G2`](@ref), [`G3`](@ref) and [`G5`](@ref).",
    ),
    (
        codetype="G",
        identifier=(19, 0, nothing),
        funname="G19",
        doc="    G19(;params...)\nSelect CNC workspace plane\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G017-G019.html).\n\n\n\n\n# Description\n\nSelect workspace plane XY, ZX, or YZ. Allows [`G2/G3`](/docs/gcode/G002-G003.html) and [`G5`](/docs/gcode/G005.html) to operate in the selected plane when `CNC_WORKSPACE_PLANES` is enabled.\n\n\nSee also [`G2`](@ref), [`G3`](@ref) and [`G5`](@ref).",
    ),
    (
        codetype="G",
        identifier=(2, 0, nothing),
        funname="G2",
        doc="    G2(;params...)\nAdd an arc or circle movement to the planner\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G002-G003.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: A coordinate on the X axis\n* Y [Optional]: A coordinate on the Y axis\n* Z [Optional]: A coordinate on the Z axis\n* I : An offset from the current X position to use as the arc center\n* J : An offset from the current Y position to use as the arc center\n* R : A radius from the current XY position to use as the arc center\n* E [Optional]: The amount to extrude between the start point and end point\n* F [Optional]: The maximum rate of the move between the start and end point\n* P [Optional]: Specify complete circles. (Requires `ARC_P_CIRCLES`)\n* S [Optional]: Set the Laser power for the move.\n\n\n# Description\n\n`G2` adds a clockwise arc move to the planner; `G3` adds a counter-clockwise arc. An arc move starts at the current position and ends at the given XYZ, pivoting around a center-point offset given by `I` and `J` or `R`.\n\n[`CNC_WORKSPACE_PLANES`](/docs/gcode/G017-G019.html) allows `G2/G3` to operate in the selected XY, ZX, or YZ workspace plane.\n\nThis command has two forms:\n#### I J Form\n\n - `I` specifies an X offset. `J` specifies a Y offset.\n - At least one of the `I` `J` parameters is required.\n - `X` and `Y` can be omitted to do a complete circle.\n - The given `X` `Y` is not error-checked.\n   The arc ends based on the angle of the destination.\n - Mixing `I` or `J` with `R` will throw an error.\n\n#### R Form\n - `R` specifies the radius. `X` or `Y` is required.\n - Omitting both `X` and `Y` will throw an error.\n - `X` or `Y` must differ from the current XY position.\n - Mixing `R` with `I` or `J` will throw an error.\n\nArc moves actually generate several short straight-line moves, the length of which are determined by the configuration option `MM_PER_ARC_SEGMENT` (default 1mm). Any change in the Z position is linearly interpolated over the whole arc.\n\n'ARC_P_CIRCLES' enables the use of the 'P' parameter to specify complete circles\n\n\nSee also [`G17`](@ref), [`G18`](@ref) and [`G19`](@ref).",
    ),
    (
        codetype="G",
        identifier=(20, 0, nothing),
        funname="G20",
        doc="    G20(;params...)\nSet Units to Inches.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G020.html).\n\n\n\n\n# Description\n\nSet units to inches. In this mode, all positions, offsets, rates, accelerations, etc., specified in G-code parameters are interpreted as inches.\n\n",
    ),
    (
        codetype="G",
        identifier=(21, 0, nothing),
        funname="G21",
        doc="    G21(;params...)\nSet Units to Millimeters.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G021.html).\n\n\n\n\n# Description\n\nSet units to millimeters. In this mode, all positions, offsets, rates, accelerations, etc., specified in G-code parameters are interpreted as millimeters.\n",
    ),
    (
        codetype="G",
        identifier=(26, 0, nothing),
        funname="G26",
        doc="    G26(;params...)\nTest the mesh and adjust.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G026.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B [Optional]: Bed temperature (otherwise 60°C) to use for the test print.\n* C [Optional]: Continue with the closest point (otherwise, don't)\n* D [Optional]: Disable leveling compensation (otherwise, enable)\n* F [Optional]: Filament diameter (otherwise 1.75mm)\n* H [Optional]: Hot end temperature (otherwise 205°C) to use for the test print.\n* I [Optional]: Material preset to use for the test print. Overrides `S`.\n* K [Optional]: Keep heaters on when done\n* L [Optional]: Layer height to use for the test\n* O [Optional]: Ooze amount (otherwise 0.3mm). Emitted at the start of the test.\n* P [Optional]: Prime Length\n* Q [Optional]: Retraction multiplier. `G26` retract and recover are 1.0mm and 1.2mm respectively. Both retract and recover are multiplied by this value.\n* R [Optional]: Number of `G26` Repetitions (otherwise 999)\n* S [Optional]: Nozzle size (otherwise 0.4mm)\n* U [Optional]: Random deviation. (`U` with no value, 50).\n* X [Optional]: X position (otherwise, current X position)\n* Y [Optional]: Y position (otherwise, current Y position)\n\n\n# Description\n\n`G26` Mesh Validation Pattern is designed to be used in conjunction with mesh-based leveling to test the accuracy of the probed mesh.\n\nThe `G26` command prints a single-layer pattern over the entire print bed, giving a clear indication of how accurately every mesh point is defined. `G26` can be used to determine which areas of the mesh are less-than-perfect and how much to adjust each mesh point.\n",
    ),
    (
        codetype="G",
        identifier=(27, 0, nothing),
        funname="G27",
        doc="    G27(;params...)\nPark the current toolhead\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G027.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Z axis action\n\n\n# Description\n\nPark the nozzle at a predefined XYZ position.\n",
    ),
    (
        codetype="G",
        identifier=(28, 0, nothing),
        funname="G28",
        doc="    G28(;params...)\nAuto home one or more axes.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G028.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* L [Optional]: Flag to restore bed leveling state after homing. (default `true`)\n* O [Optional]: Flag to skip homing if the position is already trusted\n* R [Optional]: The distance to raise the nozzle before homing\n* X [Optional]: Flag to home the X axis\n* Y [Optional]: Flag to home the Y axis\n* Z [Optional]: Flag to home the Z axis\n\n\n# Description\n\nWhen you first start up your machine it has no idea where the toolhead is positioned, so Marlin needs to use a procedure called \"homing\" to establish a known position. To do this it moves each axis towards one end of its track until it triggers a switch, commonly called an \"endstop.\" Marlin knows where the endstops are, so once all the endstops have been triggered the position is known.\n\nThe `G28` command is used to home one or more axes. The default behavior with no parameters is to home all axes.\n\nIn order to improve positional accuracy, the homing procedure can re-bump at a slower speed according to the `[XYZ]_HOME_BUMP_MM` and `HOMING_BUMP_DIVISOR` settings.\n\nThe position is easy to lose when the steppers are turned off, so homing may be required or advised after the machine has been sitting idle for a period of time. See the Configuration files for all homing options.\n",
    ),
    (
        codetype="G",
        identifier=(29, 0, nothing),
        funname="G29",
        doc="    G29(;params...)\nProbe the bed and enable leveling compensation\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G029.html).\n\n\n\n\n# Description\n\nWhen you build Marlin you have the option to include one of 5 different bed leveling systems. Each leveling system comes with its own set of options and makes `G29` behave differently, so documentation for these G-codes is divided up into 5 separate pages.\n\n### Mesh-based Leveling\nMesh leveling measures the height of the bed at several points to generate a 3D mesh representing bed imperfections. With compensation enabled, the nozzle follows the bed contours by dynamically adjusting the Z position (using bilinear interpolation between the measured points). The nozzle follows the contours of the bed more accurately with more mesh points and/or finer segmentation of moves.\n\n- [Mesh Bed Leveling](/docs/gcode/G029-mbl.html) provides an economical interactive manual mesh-based leveling system for small boards or machines without a probe. Marlin provides a UI but an LCD controller is not required.\n\n- [Auto Bed Leveling (Bilinear)](/docs/gcode/G029-abl-bilinear.html) provides mesh-based bilinear leveling, either with or without a probe (but not both).\n\n- [Unified Bed Leveling](/docs/gcode/G029-ubl.html) provides mesh-based bilinear leveling with partial probing and many options to fit a mesh to the whole bed. Planar (matrix) operations can be applied to the mesh data, but active compensation is mesh based.\n\n### Matrix-based Leveling\nWith matrix-based leveling the height of the bed is measured at three points, or in a grid, to generate a rotation matrix. This matrix is used to rotate points in 3D space relative to the tilt of the bed. So if you print an object on a tilted surface the entire object is tilted. This system assumes the bed is perfectly flat, so it is most suitable for high end machines.\n\n- [Auto Bed Leveling (Linear)](/docs/gcode/G029-abl-linear.html) provides matrix-based Linear (least-squares) leveling, with or without a probe.\n\n- [Auto Bed Leveling (3-Point)](/docs/gcode/G029-abl-3point.html) provides matrix-based 3-point leveling, with or without a probe.\n",
    ),
    (
        codetype="G",
        identifier=(3, 0, nothing),
        funname="G3",
        doc="    G3(;params...)\nAdd an arc or circle movement to the planner\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G002-G003.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: A coordinate on the X axis\n* Y [Optional]: A coordinate on the Y axis\n* Z [Optional]: A coordinate on the Z axis\n* I : An offset from the current X position to use as the arc center\n* J : An offset from the current Y position to use as the arc center\n* R : A radius from the current XY position to use as the arc center\n* E [Optional]: The amount to extrude between the start point and end point\n* F [Optional]: The maximum rate of the move between the start and end point\n* P [Optional]: Specify complete circles. (Requires `ARC_P_CIRCLES`)\n* S [Optional]: Set the Laser power for the move.\n\n\n# Description\n\n`G2` adds a clockwise arc move to the planner; `G3` adds a counter-clockwise arc. An arc move starts at the current position and ends at the given XYZ, pivoting around a center-point offset given by `I` and `J` or `R`.\n\n[`CNC_WORKSPACE_PLANES`](/docs/gcode/G017-G019.html) allows `G2/G3` to operate in the selected XY, ZX, or YZ workspace plane.\n\nThis command has two forms:\n#### I J Form\n\n - `I` specifies an X offset. `J` specifies a Y offset.\n - At least one of the `I` `J` parameters is required.\n - `X` and `Y` can be omitted to do a complete circle.\n - The given `X` `Y` is not error-checked.\n   The arc ends based on the angle of the destination.\n - Mixing `I` or `J` with `R` will throw an error.\n\n#### R Form\n - `R` specifies the radius. `X` or `Y` is required.\n - Omitting both `X` and `Y` will throw an error.\n - `X` or `Y` must differ from the current XY position.\n - Mixing `R` with `I` or `J` will throw an error.\n\nArc moves actually generate several short straight-line moves, the length of which are determined by the configuration option `MM_PER_ARC_SEGMENT` (default 1mm). Any change in the Z position is linearly interpolated over the whole arc.\n\n'ARC_P_CIRCLES' enables the use of the 'P' parameter to specify complete circles\n\n\nSee also [`G17`](@ref), [`G18`](@ref) and [`G19`](@ref).",
    ),
    (
        codetype="G",
        identifier=(30, 0, nothing),
        funname="G30",
        doc="    G30(;params...)\nProbe bed at current XY location\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G030.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: Probe with temperature compensation enabled (`PTC_PROBE`, `PTC_BED`, `PTC_HOTEND`)\n* X [Optional]: X probe position\n* Y [Optional]: Y probe position\n* E [Optional]: Engage the probe for each point\n\n\n# Description\n\nDo a single Z probe at a specified position. By default probe in the current position.\n",
    ),
    (
        codetype="G",
        identifier=(31, 0, nothing),
        funname="G31",
        doc="    G31(;params...)\nDock the Z probe sled.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G031.html).\n\n\n\n\n# Description\n\nDock the Z probe sled.\n\n\nSee also [`G32`](@ref).",
    ),
    (
        codetype="G",
        identifier=(32, 0, nothing),
        funname="G32",
        doc="    G32(;params...)\nUndock the Z probe sled.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G032.html).\n\n\n\n\n# Description\n\nUndock the Z probe sled.\n\n\nSee also [`G31`](@ref).",
    ),
    (
        codetype="G",
        identifier=(33, 0, nothing),
        funname="G33",
        doc="    G33(;params...)\nCalibrate various Delta parameters\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G033.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: If omitted iterations stop at best achievable precision. If set iterations will stop at the set precision.\n* E [Optional]: Engage the probe for each point.\n* F [Optional]: Run (\"force\") this number of iterations and take the best result.\n* P [Optional]: Number of probe points. If not specified, uses DELTA_CALIBRATION_DEFAULT_POINTS\n* T [Optional]: Disable tower angle corrections calibration (`P3`-`P7`)\n* V [Optional]: Set the verbose level\n* O [Optional]: Probe at probe-offset-relative positions instead of the required kinematic points.\n* R [Optional]: Temporarily reduce the size of the probe grid by the specified amount.\n\n\n# Description\n\nWith the `G33` command you can:\n- Probe a circular grid of points,\n- Calibrate Delta Height,\n- Calibrate endstops,\n- Calibrate Delta Radius, and\n- Calibrate Tower Angles.\n",
    ),
    (
        codetype="G",
        identifier=(34, 0, nothing),
        funname="G34",
        doc="    G34(;params...)\nAlign multiple Z steppers using a bed probe\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G034-zsaa.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Iterations - must be between 1 - 30\n* T [Optional]: Target accuracy - must be between 0.01 - 1.0\n* A [Optional]: Amplification - must be between 0.5 - 2.0\n* E [Optional]: Stow probe after probing each point.\n\n\n# Description\n\nAlign multiple Z stepper motors using a bed probe by probing one position per stepper. See [`M422`](/docs/gcode/M422.html) for Z-Stepper automatic alignment parameter selection.\n\n\nSee also [`M422`](@ref), [`M906`](@ref) and [`M907`](@ref).",
    ),
    (
        codetype="G",
        identifier=(35, 0, nothing),
        funname="G35",
        doc="    G35(;params...)\nRun a procedure to tram the bed\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G035.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Screw thread type\n\n\n# Description\n\nThis command runs an interactive procedure to help you adjust the bed corners so that the bed is as true to the machine frame as possible. This is an important step in calibrating your printer and getting the best first layer results.\n",
    ),
    (
        codetype="G",
        identifier=(38, 2, nothing),
        funname="G38_2",
        doc="    G38.2(;params...)\nProbe towards (or away from) a workpiece\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G038.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Target X\n* Y [Optional]: Target Y\n* Z [Optional]: Target Z\n* F [Optional]: Feedrate for the move\n\n\n# Description\n\nThe Probe Target commands are used to probe towards (or away from) a workpiece to determine its precise position. You might, for example, use a grounded metal workpiece, with a metal probe spliced into the bed probe circuit.\n\n- `G38.2` probes towards a target and stops on contact, signaling an error if it reaches the target position without triggering the probe.\n- `G38.3` probes towards a target and stops on contact. No error is given if it fails to trigger the probe.\n- `G38.4` probes away from a target and stops on contact break. An error is signaled if the target position is reached without triggering the probe.\n- `G38.5` probes away from a target and stops on contact break. No error is given if it fails to trigger the probe.\n\nThese commands use the current homing feedrate, by default.\n",
    ),
    (
        codetype="G",
        identifier=(38, 3, nothing),
        funname="G38_3",
        doc="    G38.3(;params...)\nProbe towards (or away from) a workpiece\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G038.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Target X\n* Y [Optional]: Target Y\n* Z [Optional]: Target Z\n* F [Optional]: Feedrate for the move\n\n\n# Description\n\nThe Probe Target commands are used to probe towards (or away from) a workpiece to determine its precise position. You might, for example, use a grounded metal workpiece, with a metal probe spliced into the bed probe circuit.\n\n- `G38.2` probes towards a target and stops on contact, signaling an error if it reaches the target position without triggering the probe.\n- `G38.3` probes towards a target and stops on contact. No error is given if it fails to trigger the probe.\n- `G38.4` probes away from a target and stops on contact break. An error is signaled if the target position is reached without triggering the probe.\n- `G38.5` probes away from a target and stops on contact break. No error is given if it fails to trigger the probe.\n\nThese commands use the current homing feedrate, by default.\n",
    ),
    (
        codetype="G",
        identifier=(38, 4, nothing),
        funname="G38_4",
        doc="    G38.4(;params...)\nProbe towards (or away from) a workpiece\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G038.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Target X\n* Y [Optional]: Target Y\n* Z [Optional]: Target Z\n* F [Optional]: Feedrate for the move\n\n\n# Description\n\nThe Probe Target commands are used to probe towards (or away from) a workpiece to determine its precise position. You might, for example, use a grounded metal workpiece, with a metal probe spliced into the bed probe circuit.\n\n- `G38.2` probes towards a target and stops on contact, signaling an error if it reaches the target position without triggering the probe.\n- `G38.3` probes towards a target and stops on contact. No error is given if it fails to trigger the probe.\n- `G38.4` probes away from a target and stops on contact break. An error is signaled if the target position is reached without triggering the probe.\n- `G38.5` probes away from a target and stops on contact break. No error is given if it fails to trigger the probe.\n\nThese commands use the current homing feedrate, by default.\n",
    ),
    (
        codetype="G",
        identifier=(38, 5, nothing),
        funname="G38_5",
        doc="    G38.5(;params...)\nProbe towards (or away from) a workpiece\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G038.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Target X\n* Y [Optional]: Target Y\n* Z [Optional]: Target Z\n* F [Optional]: Feedrate for the move\n\n\n# Description\n\nThe Probe Target commands are used to probe towards (or away from) a workpiece to determine its precise position. You might, for example, use a grounded metal workpiece, with a metal probe spliced into the bed probe circuit.\n\n- `G38.2` probes towards a target and stops on contact, signaling an error if it reaches the target position without triggering the probe.\n- `G38.3` probes towards a target and stops on contact. No error is given if it fails to trigger the probe.\n- `G38.4` probes away from a target and stops on contact break. An error is signaled if the target position is reached without triggering the probe.\n- `G38.5` probes away from a target and stops on contact break. No error is given if it fails to trigger the probe.\n\nThese commands use the current homing feedrate, by default.\n",
    ),
    (
        codetype="G",
        identifier=(4, 0, nothing),
        funname="G4",
        doc="    G4(;params...)\nPause the planner\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G004.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Amount of time to dwell\n* P [Optional]: Amount of time to dwell\n\n\n# Description\n\nDwell pauses the command queue and waits for a period of time.\n",
    ),
    (
        codetype="G",
        identifier=(42, 0, nothing),
        funname="G42",
        doc="    G42(;params...)\nMove to a specific point in the leveling mesh\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G042.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: The column of the mesh coordinate\n* J [Optional]: The row of the mesh coordinate\n* F [Optional]: The maximum movement rate of the move between the start and end point. The feedrate set here applies to subsequent moves that omit this parameter.\n\n\n# Description\n\nThe `G42` command moves the nozzle to the location corresponding to a specific coordinate in the bed leveling mesh. It operates similarly to the [`G0`](/docs/gcode/G000-G001.html) and [`G1`](/docs/gcode/G000-G001.html) commands except that the provided coordinates are a mesh row and column instead of an absolute or relative position on the bed.\n\nThe `G42` command will determine the bed position that corresponds to the provided mesh row and column and move the nozzle to that position.\n",
    ),
    (
        codetype="G",
        identifier=(425, 0, nothing),
        funname="G425",
        doc="    G425(;params...)\nUse a conductive object to calibrate XYZ backlash\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G425.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B [Optional]: Perform calibration of backlash only.\n* T [Optional]: Perform calibration of one toolhead only.\n* V [Optional]: Probe cube and print position, error, backlash and hotend offset. (Requires `CALIBRATION_REPORTING`)\n* U [Optional]: Uncertainty: how far to start probe away from the cube (mm)\n\n\n# Description\n\nThis command performs an automatic calibration of backlash, positional errors, and nozzle offset by touching the nozzle to the sides of a bed-mounted, electrically-conductive object (_e.g.,_ a cube, washer or bolt).\n\nThis command measures backlash but doesn't enable backlash correction. Use [`M425`](/docs/gcode/M425.html) to enable backlash correction.\n",
    ),
    (
        codetype="G",
        identifier=(5, 0, nothing),
        funname="G5",
        doc="    G5(;params...)\nCubic B-spline with XYE destination and IJPQ offsets\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G005.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X : A destination coordinate on the X axis\n* Y : A destination coordinate on the Y axis\n* E [Optional]: The length of filament to feed into the extruder between the start and end point\n* F [Optional]: The maximum feedrate of the move between the start and end point (in current units per second). This value applies to all subsequent moves.\n* I : Offset from the `X` start point to first control point\n* J : Offset from the `Y` start point to first control point\n* P : Offset from the `X` end point to second control point\n* Q : Offset from the `Y` end point to the second control point\n* S [Optional]: Set the Laser power for the move.\n\n\n# Description\n`G5` creates a cubic B-spline in the XY plane with the `X` and `Y` axes only. `P` and `Q` parameters are required. `I` and `J` are required for the first `G5` command in a series. For subsequent `G5` commands, either both `I` and `J` must be specified, or neither. If `I` and `J` are unspecified, the starting direction of the cubic will automatically match the ending direction of the previous cubic (as if `I` and `J` are the negation of the previous `P` and `Q`).\n\nSee [This interactive demo](//www.geogebra.org/m/WPHQ9rUt) to understand how Bézier control points work.\n",
    ),
    (
        codetype="G",
        identifier=(53, 0, nothing),
        funname="G53",
        doc="    G53(;params...)\nApply native workspace to the current move.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G053.html).\n\n\n\n\n# Description\n\n`G53` applies native workspace to the current move. See [`G54-G59.3`](/docs/gcode/G054-G059.html) for workspace coordinate system.\nIn CNC G-code `G53` is a modifier. It precedes a movement command (or other modifiers) on the same line.\nMarlin also accepts `G53` on a line by itself as the command to return to the native workspace.\n",
    ),
    (
        codetype="G",
        identifier=(54, 0, nothing),
        funname="G54",
        doc="    G54(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(55, 0, nothing),
        funname="G55",
        doc="    G55(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(56, 0, nothing),
        funname="G56",
        doc="    G56(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(57, 0, nothing),
        funname="G57",
        doc="    G57(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(58, 0, nothing),
        funname="G58",
        doc="    G58(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(59, 0, nothing),
        funname="G59",
        doc="    G59(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(59, 1, nothing),
        funname="G59_1",
        doc="    G59.1(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(59, 2, nothing),
        funname="G59_2",
        doc="    G59.2(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(59, 3, nothing),
        funname="G59_3",
        doc="    G59.3(;params...)\nSelect a workspace coordinate system\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G054-G059.html).\n\n\n\n\n# Description\n\nA workspace is an XYZ offset to the native machine space. All workspaces default to 0,0,0 at start, or with EEPROM support they may be restored from a previous session. See [`G53`](/docs/gcode/G053.html) for native space.\n- \"[`G92`](/docs/gcode/G092.html) is used to set the current workspace's offset.\"\n- \"`G54` - use coordinate system 1\"\n- \"`G55` - use coordinate system 2\"\n- \"`G56` - use coordinate system 3\"\n- \"`G57` - use coordinate system 4\"\n- \"`G58` - use coordinate system 5\"\n- \"`G59` - use coordinate system 6\"\n- \"`G59.1` - use coordinate system 7\"\n- \"`G59.2` - use coordinate system 8\"\n- \"`G59.3` - use coordinate system 9\"\n\n\nSee also [`G92`](@ref).",
    ),
    (
        codetype="G",
        identifier=(6, 0, nothing),
        funname="G6",
        doc="    G6(;params...)\nPerform a direct, uninterpolated, and non-kinematic synchronized move\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G006.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Set page index\n* R [Optional]: Step rate per second. Last value is cached for future invocations.\n* S [Optional]: Number of steps to take. Defaults to max steps.\n* X [Optional]: 1 for positive, 0 for negative. Last value is cached for future invocations. Not used for directional formats.\n* Y [Optional]: 1 for positive, 0 for negative. Last value is cached for future invocations. Not used for directional formats.\n* Z [Optional]: 1 for positive, 0 for negative. Last value is cached for future invocations. Not used for directional formats.\n* E [Optional]: 1 for positive, 0 for negative. Last value is cached for future invocations. Not used for directional formats.\n\n\n# Description\nDirect Stepping allows a host device to issue direct stepper movements in binary format, pre-written by the host device to a page in the device RAM.\n\nA \"page manager\" mechanism is provided to load the binary data onto the device. The page manager provided here uses a parallel protocol over the USB serial connection to write pages to the device RAM, and is decoupled from the normal serial G-code pipeline. This allows the host device to preload pages as fast as possible without waiting on the G-code pipeline.\n\nOnce a page is written by the device, it can be triggered using the `G6` G-code which references the page index that should be used for that move. Depending on the page format, direction arguments may need to be provided in the `G6` code.\n\n- Requires [Step Daemon](//github.com/colinrgodsey/step-daemon) by [@ColinRGodsey](//github.com/colinrgodsey).\n- Visit [RepRap Wiki](//reprap.org/wiki/Direct_Stepping) for more details.\n",
    ),
    (
        codetype="G",
        identifier=(60, 0, nothing),
        funname="G60",
        doc="    G60(;params...)\nSave current position to specified slot\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G060.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Memory slot. If omitted, the first slot (0) is used.\n\n\n# Description\n\nSave the current position of all axes in an SRAM buffer for later recall with [`G61`](/docs/gcode/G061.html).\n\n\nSee also [`G61`](@ref).",
    ),
    (
        codetype="G",
        identifier=(61, 0, nothing),
        funname="G61",
        doc="    G61(;params...)\nReturn to saved position of specified slot\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G061.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* F [Optional]: Move feedrate\n* S [Optional]: Memory slot (0 if omitted)\n* X [Optional]: Flag to restore the X axis\n* Y [Optional]: Flag to restore the Y axis\n* Z [Optional]: Flag to restore the Z axis\n* E [Optional]: Flag to restore the E axis\n\n\n# Description\n\nUse this command to move to a saved position. To limit the move to only some axes, include one or more axis letters. Otherwise all axes will be included.\n\n\nSee also [`G60`](@ref).",
    ),
    (
        codetype="G",
        identifier=(76, 0, nothing),
        funname="G76",
        doc="    G76(;params...)\nCalibrate probe temperature compensation\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G076.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B [Optional]: Calibrate bed only\n* P [Optional]: Calibrate probe only\n\n\n# Description\n\nCalibrate temperature compensation offsets for bed and/or probe temperatures. Temperature compensation values are added to probe measurements when running [`G29`](/docs/gcode/G029.html) mesh bed leveling. Currently, calibration only heats up the bed, not the hotend. The probe is heated up by bringing it close to the heated bed and cooled down by moving it away.\n\nSee [Probe Temperature Compensation](/docs/features/probe_temp_compensation.html) for a more detailed explanation of the process.\n\n\nSee also [`M192`](@ref) and [`M871`](@ref).",
    ),
    (
        codetype="G",
        identifier=(80, 0, nothing),
        funname="G80",
        doc="    G80(;params...)\nCancel the current motion mode\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G080.html).\n\n\n\n\n# Description\n\nCancels the current motion mode (G0 G1 G2 G3 G5 G38.X). With `GCODE_MOTION_MODES` enabled, Marlin will remember the last used motion mode which can then be canceled with `G80`.\n",
    ),
    (
        codetype="G",
        identifier=(90, 0, nothing),
        funname="G90",
        doc="    G90(;params...)\nSet the interpreter to absolute positions\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G090.html).\n\n\n\n\n# Description\n\nIn absolute mode all coordinates given in G-code are interpreted as positions in the logical coordinate space. This includes the extruder position unless overridden by [`M83`](/docs/gcode/M083.html).\n",
    ),
    (
        codetype="G",
        identifier=(91, 0, nothing),
        funname="G91",
        doc="    G91(;params...)\nSet the interpreter to relative positions\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G091.html).\n\n\n\n\n# Description\n\nSet relative position mode. In this mode all coordinates are interpreted as relative to the last position. This includes the extruder position unless overridden by [`M82`](/docs/gcode/M082.html).\n",
    ),
    (
        codetype="G",
        identifier=(92, 0, nothing),
        funname="G92",
        doc="    G92(;params...)\nSet the current position of one or more axes.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/G092.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: New X axis position\n* Y [Optional]: New Y axis position\n* Z [Optional]: New Z axis position\n* E [Optional]: New extruder position\n\n\n# Description\n\nSet the current position to the values specified. In Marlin 1.1.0 and up, the software endstops are adjusted to preserve the physical movement limits. Thus you could use `G92` to set the middle of the bed to 0,0 and then run .gcode that was sliced for a Deltabot.\n\nThe [`CNC_COORDINATE_SYSTEMS`](/docs/gcode/G054-G059.html) option enables use of `G92.1` to reset the selected workspace to native machine space. See [`G54-G59`](/docs/gcode/G054-G059.html) and [`G53`](/docs/gcode/G053.html).\n",
    ),
    (
        codetype="M",
        identifier=(0, 0, nothing),
        funname="M0",
        doc="    M0(;params...)\nStop and wait for user\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M000-M001.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Expire time, in seconds\n* P [Optional]: Expire time, in milliseconds\n* string [Optional]: An optional message to display on the LCD\n\n\n# Description\n\nThe `M0` and `M1` commands pause after the last movement and wait for the user to continue. `M1` is a deprecated alias for `M0`.\n",
    ),
    (
        codetype="M",
        identifier=(1, 0, nothing),
        funname="M1",
        doc="    M1(;params...)\nStop and wait for user\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M000-M001.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Expire time, in seconds\n* P [Optional]: Expire time, in milliseconds\n* string [Optional]: An optional message to display on the LCD\n\n\n# Description\n\nThe `M0` and `M1` commands pause after the last movement and wait for the user to continue. `M1` is a deprecated alias for `M0`.\n",
    ),
    (
        codetype="M",
        identifier=(10, 0, nothing),
        funname="M10",
        doc="    M10(;params...)\nEnable and disable the Cutter Vacuum or Laser Blower Motor.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M010-M011.html).\n\n\n\n\n# Description\n\nImmediately turn the cutter's vacuum or laser's blower motor on or off.\n",
    ),
    (
        codetype="M",
        identifier=(100, 0, nothing),
        funname="M100",
        doc="    M100(;params...)\nObserve memory used by code\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M100.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* D [Optional]: Dump the free memory block from `__brkval` to the stack pointer\n* F [Optional]: Return the number of free bytes in the memory pool along with other vital statistics that define the memory pool\n* I [Optional]: Initialize the free memory pool so it can be watched and print vital statistics that define the free memory pool\n* C [Optional]: Corrupt 'n' locations in the free memory pool and report the locations of the corruption. This is useful to check the correctness of the `M100 D` and `M100 F` commands\n\n\n# Description\n\nUse [`M100`](/docs/gcode/M100.html) for development purposes to observe how much memory (particularly stack) is being used by code. Proper AVR code should avoid use of `new`, `malloc`, etc., and instead use either pre-allocated static variables or stack.\n",
    ),
    (
        codetype="M",
        identifier=(102, 0, nothing),
        funname="M102",
        doc="    M102(;params...)\nSet the state or trigger distance (in 0.1mm units) for the Bed Distance Sensor.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M102.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Set the Bed Distance Sensor state and trigger distance.\n\n\n# Description\n",
    ),
    (
        codetype="M",
        identifier=(104, 0, nothing),
        funname="M104",
        doc="    M104(;params...)\nSet a new target hot end temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M104.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Material preset index. Overrides `S`.\n* S [Optional]: Target temperature.<br/>`AUTOTEMP`: the min auto-temperature.\n* F [Optional]: `AUTOTEMP`: Autotemp flag. Omit to disable autotemp.\n* B [Optional]: `AUTOTEMP`: The max auto-temperature.\n* T [Optional]: Hotend index. If omitted, the currently active hotend will be used.\n\n\n# Description\n\nSet a new target hot end temperature and continue without waiting. The firmware will continue to try to reach and hold the temperature in the background.\n\nUse [`M109`](/docs/gcode/M109.html) to wait for the hot end to reach the target temperature.\n",
    ),
    (
        codetype="M",
        identifier=(105, 0, nothing),
        funname="M105",
        doc="    M105(;params...)\nSend a temperature report to the host.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M105.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* R [Optional]: Include the Redundant temperature sensor (if any)\n* T [Optional]: Hotend index\n\n\n# Description\n\nRequest a temperature report to be sent to the host as soon as possible.\n\n\nSee also [`M155`](@ref).",
    ),
    (
        codetype="M",
        identifier=(106, 0, nothing),
        funname="M106",
        doc="    M106(;params...)\nTurn on the fan and set its speed\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M106.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Material preset index. Overrides `S`.\n* S [Optional]: Speed, from 0 to 255. S255 provides 100% duty cycle; S128 produces 50%.\n* P [Optional]: Fan index\n* T [Optional]: Secondary speed. Added in Marlin 1.1.7. (Requires `EXTRA_FAN_SPEED`)\n- `M106 P<fan> T3-255` sets a secondary speed for `<fan>`.\n- `M106 P<fan> T2` uses the set secondary speed.\n- `M106 P<fan> T1` restores the previous fan speed.\n\n\n\n# Description\n\nTurn on one of the fans and set its speed. If no fan index is given, the print cooling fan is selected. The fan speed applies to the next block added to the planner, so it will not take effect until previous moves in the planner are done. Under manual control with an idle machine, [`M106`](/docs/gcode/M106.html) will change the fan speed immediately.\n",
    ),
    (
        codetype="M",
        identifier=(107, 0, nothing),
        funname="M107",
        doc="    M107(;params...)\nTurn off a fan\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M107.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Fan index\n\n\n# Description\n\nTurn off one of the fans. If no fan index is given, the print cooling fan.\n",
    ),
    (
        codetype="M",
        identifier=(108, 0, nothing),
        funname="M108",
        doc="    M108(;params...)\nBreak out of the current waiting loop\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M108.html).\n\n\n\n\n# Description\n\nThe [`M108`](/docs/gcode/M108.html) command requires `EMERGENCY_PARSER` for full effectiveness. (Otherwise a full queue blocks the parser.)\n\nSome G-code commands cause Marlin to go into a closed loop, waiting indefinitely for a certain state or event. For example, [`M109`](/docs/gcode/M109.html) waits for the target temperature to be reached, and [`M0`](/docs/gcode/M000-M001.html) waits for an LCD click.\n\nIn the case of [`M109`](/docs/gcode/M109.html), the [`M108`](/docs/gcode/M108.html) command stops waiting for the target temperature and continues processing G-code. This may result in \"cold extrude\" messages. For a full stop use [`M112`](/docs/gcode/M112.html).\n\nIn the case of [`M0`](/docs/gcode/M000-M001.html) the [`M108`](/docs/gcode/M108.html) command acts like the LCD button, breaking out of [`M0`](/docs/gcode/M000-M001.html) and continuing to process the G-code queue.\n",
    ),
    (
        codetype="M",
        identifier=(109, 0, nothing),
        funname="M109",
        doc="    M109(;params...)\nWait for the hot end to reach its target.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M109.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Material preset index. Overrides `S`.\n* S [Optional]: Target temperature (wait only when heating). Also `AUTOTEMP`: The min auto-temperature.\n* R [Optional]: Target temperature (wait for cooling or heating).\n* F [Optional]: Autotemp flag. Omit to disable autotemp.\n* B [Optional]: With `AUTOTEMP`, the max auto-temperature.\n* T [Optional]: Hotend index. If omitted, the currently active hotend will be used.\n\n\n# Description\n\nThis command optionally sets a new target hot end temperature and waits for the target temperature to be reached before proceeding. If the temperature is set with `S` then [`M109`](/docs/gcode/M109.html) waits *only when heating*. If the temperature is set with `R` then [`M109`](/docs/gcode/M109.html) will also wait for the temperature to go down.\n",
    ),
    (
        codetype="M",
        identifier=(11, 0, nothing),
        funname="M11",
        doc="    M11(;params...)\nEnable and disable the Cutter Vacuum or Laser Blower Motor.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M010-M011.html).\n\n\n\n\n# Description\n\nImmediately turn the cutter's vacuum or laser's blower motor on or off.\n",
    ),
    (
        codetype="M",
        identifier=(110, 0, nothing),
        funname="M110",
        doc="    M110(;params...)\nSet the current line number.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M110.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* N : Line number\n\n\n# Description\n\nHosts can use [`M110`](/docs/gcode/M110.html) to set the current line number in a print job. Each line number sent by a host must be one higher than the previous line number, or the firmware will ignore the line and send an error requesting a resend of the missing line. This is one technique Marlin uses to keep in sync with hosts.\n",
    ),
    (
        codetype="M",
        identifier=(111, 0, nothing),
        funname="M111",
        doc="    M111(;params...)\nReport and optionally set the debug flags.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M111.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Debug flag bits\n\n\n# Description\n\nMarlin has several debug bits that can be set, in combination, to help configure, troubleshoot, and debug the firmware. Add up the debug bits you need:\n\nMask|Name|Description\n1|ECHO|Echo all commands sent to the parser.\n2|INFO|Print extra informational messages.\n4|ERRORS|Print extra error messages.\n8|DRYRUN|Don't extrude, don't save leveling data, etc.\n16|COMMUNICATION|Not currently used.\n32|LEVELING|Detailed messages for homing, probing, and leveling. (Requires `DEBUG_LEVELING_FEATURE`.)\n64|Reserved|Reserved for future usage\n128|Reserved|Reserved for future usage\n",
    ),
    (
        codetype="M",
        identifier=(112, 0, nothing),
        funname="M112",
        doc="    M112(;params...)\nShut everything down and halt the machine.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M112.html).\n\n\n\n\n# Description\n\nUsed for immediate halt, [`M112`](/docs/gcode/M112.html) shuts down the machine, turns off all the steppers and heaters, and if possible, turns off the power supply. A reset is required to return to operational mode.\n\n`M112` is NOT a safety-rated \"Emergency Stop\" in the formal sense and is not guaranteed to meet the requirements of any safety category or required performance level (PLr). This is functionally a control stop. Machine builders should perform their own risk-assessment and implement suitable safety stop devices.\n",
    ),
    (
        codetype="M",
        identifier=(113, 0, nothing),
        funname="M113",
        doc="    M113(;params...)\nGet or set the host keepalive interval.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M113.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Keepalive interval (0-60).\n\n\n# Description\n\nDuring some lengthy processes, such as [`G29`](/docs/gcode/G029.html), Marlin may appear to the host to have \"gone away.\" The \"host keepalive\" feature will send messages to the host when Marlin is busy or waiting for user response so the host won't try to reconnect.\n\nSend `M113` with no `S` parameter to get the current setting.\n",
    ),
    (
        codetype="M",
        identifier=(114, 0, nothing),
        funname="M114",
        doc="    M114(;params...)\nReport the current tool position to the host.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M114.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* D [Optional]: Detailed information (requires `M114_DETAIL`)\n* E [Optional]: Report E stepper position (requires `M114_DETAIL`)\n* R [Optional]: Real position information (requires `M114_REALTIME`)\n\n\n# Description\nGet the \"current position\" of the active tool. Stepper values are included.\n\nIf `M114_LEGACY` is enabled the planner will be synchronized before reporting so that the reported position is not be ahead of the actual planner position.\n\nNormally `M114` reports the \"projected position\" which is the last position Marlin was instructed to move to.\n\nWith the `M114_REALTIME` option you can send `R` to get the \"real\" current position at the moment that the request was processed. This position comes directly from the steppers in the midst of motion, so when the printer is moving you can consider this the \"recent position.\"\n\nFor debugging it can be useful to enable `M114_DETAIL` which adds `D` and `E` parameters to get extra details.\n\n\nSee also [`M154`](@ref).",
    ),
    (
        codetype="M",
        identifier=(115, 0, nothing),
        funname="M115",
        doc="    M115(;params...)\nPrint the firmware info and capabilities.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M115.html).\n\n\n\n\n# Description\nThis command causes Marlin to output a string like this:\n\n```\nFIRMWARE_NAME:Marlin 1.1.0 (Github) SOURCE_CODE_URL:https://github.com/MarlinFirmware/Marlin PROTOCOL_VERSION:1.0 MACHINE_TYPE:RepRap EXTRUDER_COUNT:1 UUID:cede2a2f-41a2-4748-9b12-c55c62f367ff\n```\n\nWhen `EXTENDED_CAPABILITIES_REPORT` is enabled, Marlin also reports its capabilities:\n\n```\nCap:EEPROM:1\nCap:AUTOREPORT_TEMP:1\nCap:PROGRESS:0\nCap:AUTOLEVEL:1\nCap:Z_PROBE:1\nCap:SOFTWARE_POWER:0\nCap:TOGGLE_LIGHTS:0\nCap:EMERGENCY_PARSER:1\n```\n\nHosts use this information to improve interoperability, so it's a good feature to enable.\n\nWith `EXTENDED_CAPABILITIES_REPORT` and `M115_GEOMETRY_REPORT` enabled, Marlin will also report detailed printer geometry:\n\n```\narea:{full:{min:{x:0,y:0,z:0,i:0,j:0,k:0,u:0,v:0,w:0},max:{x:200,y:200,z:200,i:0,j:0,k:0,u:0,v:0,w:0}},work:{min:{x:0,y:0,z:0,i:0,j:0,k:0},max:{x:200,y:200,z:200,i:0,j:0,k:0,u:0,v:0,w:0}}}\n```\n\nCoordinates are only reported for declared linear axes. So for a classic cartesian printer, the geometry report will look like:\n\n```\narea:{full:{min:{x:0,y:0,z:0},max:{x:200,y:200,z:200}},work:{min:{x:0,y:0,z:0},max:{x:200,y:200,z:200}}}\n```\n",
    ),
    (
        codetype="M",
        identifier=(117, 0, nothing),
        funname="M117",
        doc="    M117(;params...)\nSet the message line on the LCD.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M117.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: LCD status message\n\n\n# Description\n\nSet the status line message on the LCD.\n",
    ),
    (
        codetype="M",
        identifier=(118, 0, nothing),
        funname="M118",
        doc="    M118(;params...)\nSend text to serial\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M118.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Message string. If omitted, a blank line will be sent.\n* A1 [Optional]: Prepend `// ` to denote a comment or action command. Hosts like OctoPrint can interpret such commands to perform special actions. See your host's documentation.\n* E1 [Optional]: Prepend `echo:` to the message. Some hosts will display echo messages differently when preceded by `echo:`.\n* Pn [Optional]: Send message to host serial port (1-9).\n\n\n# Description\n\nSend a message to the connected host for display in the host console or to perform a host action.\n",
    ),
    (
        codetype="M",
        identifier=(119, 0, nothing),
        funname="M119",
        doc="    M119(;params...)\nReport endstop and probe states to the host.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M119.html).\n\n\n\n\n# Description\n\nUse this command to get the current state of all endstops, useful for setup and troubleshooting. Endstops are reported as either \"`open`\" or \"`TRIGGERED`\".\n\nThe state of the Z probe and filament runout sensors are also reported with this command.\n",
    ),
    (
        codetype="M",
        identifier=(120, 0, nothing),
        funname="M120",
        doc="    M120(;params...)\nEnable endstops and keep them enabled when not homing.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M120.html).\n\n\n\n\n# Description\n\nEnable endstops.\n",
    ),
    (
        codetype="M",
        identifier=(121, 0, nothing),
        funname="M121",
        doc="    M121(;params...)\nDisable endstops and keep them enabled when not homing.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M121.html).\n\n\n\n\n# Description\n\nDisable endstops.\n",
    ),
    (
        codetype="M",
        identifier=(122, 0, nothing),
        funname="M122",
        doc="    M122(;params...)\nGet TMC Debug Info\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M122.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Flag to re-initialize stepper drivers with current settings.\n* X [Optional]: Target X driver(s) only.\n* Y [Optional]: Target Y driver(s) only.\n* Z [Optional]: Target Z driver(s) only.\n* E [Optional]: Target E driver(s) only.\n* V [Optional]: Report raw register data. Refer to the datasheet to decipher the report.\n* S [Optional]: Flag to enable/disable continuous debug reporting.\n* P [Optional]: Interval between continuous debug reports, in milliseconds.\n\n\n# Description\n\nDo a communication check for configured TMC drivers. Trinamic drivers that support this feature are TMC2130, TMC2160, TMC2208, TMC2209, TMC2660, TMC5130, and TMC5160.\n\n- With no parameters, this command returns the current settings for all installed and supported Trinamic stepper drivers.\n- Send `M122 I` to re-initialize drivers after a late power-on. Use `S[0|1]` to enable/disable continuous debugging output.\n",
    ),
    (
        codetype="M",
        identifier=(123, 0, nothing),
        funname="M123",
        doc="    M123(;params...)\nReport fan speeds from tachometers\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M123.html).\n\n\n\n\n# Description\n\nIf your machine has fans with tachometers this command will report their current speed readings in RPM. Marlin can also auto-report the fan speeds at regular intervals, as set by `M123 S`.\n",
    ),
    (
        codetype="M",
        identifier=(125, 0, nothing),
        funname="M125",
        doc="    M125(;params...)\nSave current position and move to filament change position.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M125.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* L [Optional]: Retract length (otherwise `FILAMENT_CHANGE_RETRACT_LENGTH`)\n* X [Optional]: X position to park at (otherwise `FILAMENT_CHANGE_X_POS`)\n* Y [Optional]: Y position to park at (otherwise `FILAMENT_CHANGE_Y_POS`)\n* Z [Optional]: Z raise before park (otherwise `FILAMENT_CHANGE_Z_ADD`)\n* P [Optional]: Always show a prompt and await a response (With an LCD menu)\n\n\n# Description\n\nSave the current nozzle position and move to the configured park position.\n",
    ),
    (
        codetype="M",
        identifier=(126, 0, nothing),
        funname="M126",
        doc="    M126(;params...)\nOpen the valve for Baricuda 1.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M126.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Valve pressure\n\n\n# Description\n\nOpen the valve for Baricuda paste extruder 1.\n",
    ),
    (
        codetype="M",
        identifier=(127, 0, nothing),
        funname="M127",
        doc="    M127(;params...)\nClose the valve for Baricuda 1.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M127.html).\n\n\n\n\n# Description\n\nClose the valve for Baricuda paste extruder 1.\n",
    ),
    (
        codetype="M",
        identifier=(128, 0, nothing),
        funname="M128",
        doc="    M128(;params...)\nOpen the valve for Baricuda 2.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M128.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Valve pressure\n\n\n# Description\n\nOpen the valve for Baricuda paste extruder 2.\n",
    ),
    (
        codetype="M",
        identifier=(129, 0, nothing),
        funname="M129",
        doc="    M129(;params...)\nClose the valve for Baricuda 2.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M129.html).\n\n\n\n\n# Description\n\nClose the valve for Baricuda paste extruder 2.\n",
    ),
    (
        codetype="M",
        identifier=(140, 0, nothing),
        funname="M140",
        doc="    M140(;params...)\nSet a new target bed temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M140.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Material preset index. Overrides `S`.\n* S [Optional]: Target temperature\n\n\n# Description\n\nSet a new target temperature for the heated bed and continue without waiting. The firmware manages heating in the background.\n\nUse [`M190`](/docs/gcode/M190.html) to wait for the bed to reach the target temperature.\n",
    ),
    (
        codetype="M",
        identifier=(141, 0, nothing),
        funname="M141",
        doc="    M141(;params...)\nSet a new target chamber temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M141.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Target temperature.<br/>`AUTOTEMP`: the min auto-temperature.\n\n\n# Description\n\nSet a new target heated chamber temperature and continue without waiting. The firmware will continue to try to reach and hold the temperature in the background.\n",
    ),
    (
        codetype="M",
        identifier=(143, 0, nothing),
        funname="M143",
        doc="    M143(;params...)\nSet a new target laser coolant temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M143.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Target laser coolant temperature.\n\n\n# Description\n\nSet a cooler target temperature and continue without waiting. The firmware manages cooling in the background.\nAny value greater than the COOLER_MAXTEMP (set in Configuratin_adv.h) will be set to the COOLER_MAXTEMP value.\nUse [`M193`](/docs/gcode/M193.html) if you want to wait for the cooler to reach the target temperature.\n\n",
    ),
    (
        codetype="M",
        identifier=(145, 0, nothing),
        funname="M145",
        doc="    M145(;params...)\nSet material presets in the LCD menu.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M145.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Material index\n* H [Optional]: Hotend temperature\n* B [Optional]: Bed temperature\n* F [Optional]: Fan speed\n\n\n# Description\n\nSet the preheating presets for materials in the LCD menu.\n",
    ),
    (
        codetype="M",
        identifier=(149, 0, nothing),
        funname="M149",
        doc="    M149(;params...)\nSet temperature units to Celsius, Fahrenheit, or Kelvin.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M149.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: Celsius\n* F [Optional]: Fahrenheit\n* K [Optional]: Kelvin\n\n\n# Description\n\nSet temperature units to Celsius, Fahrenheit, or Kelvin. Celsius is the default.\n",
    ),
    (
        codetype="M",
        identifier=(150, 0, nothing),
        funname="M150",
        doc="    M150(;params...)\nSet the color of the RGB(W) LED, backlight, or LED strip.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M150.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* R [Optional]: Red component from 0 to 255\n* U [Optional]: Green component from 0 to 255\n* B [Optional]: Blue component from 0 to 255\n* W [Optional]: White component from 0 to 255 (`RGBW_LED` or `NEOPIXEL_LED` only)\n* P [Optional]: Brightness from 0 to 255 (Requires `NEOPIXEL_LED`)\n* I [Optional]: NeoPixel pixel index (0 .. pixels-1) (Requires `NEOPIXEL_LED`)\n* S [Optional]: NeoPixel strip index (0 or 1) (Requires `NEOPIXEL2_SEPARATE`)\n* K [Optional]: Keep all unspecified values unchanged (Requires `NEOPIXEL_LED`)\n\n\n# Description\n\nIf you have an RGB(W) light, either as part of a controller or installed separately, the [`M150`](/docs/gcode/M150.html) command can be used to set its color.\n",
    ),
    (
        codetype="M",
        identifier=(154, 0, nothing),
        funname="M154",
        doc="    M154(;params...)\nPeriodically auto-report position to serial\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M154.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Interval in seconds between auto-reports. `S0` to disable.\n\n\n# Description\n\nSome host software and serial controllers use `M114` to get the current position, but polling with [`M114`](/docs/gcode/M114.html) is less than optimal, and in older versions of Marlin it would cause print stuttering. With `M154` hosts can simply set an interval and Marlin will keep sending reports automatically. This method is preferred over polling with [`M114`](/docs/gcode/M114.html).\n\n\nSee also [`M114`](@ref).",
    ),
    (
        codetype="M",
        identifier=(155, 0, nothing),
        funname="M155",
        doc="    M155(;params...)\nAuto-report temperatures to host periodically.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M155.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Interval in seconds between auto-reports. `S0` to disable.\n\n\n# Description\n\nIt can be useful for host software to track temperatures, display and graph them over time, but polling with [`M105`](/docs/gcode/M105.html) is less than optimal. With [`M155`](/docs/gcode/M155.html) hosts simply set an interval and Marlin will keep sending data automatically. This method is preferred over polling with [`M105`](/docs/gcode/M105.html).\n\n\nSee also [`M105`](@ref).",
    ),
    (
        codetype="M",
        identifier=(16, 0, nothing),
        funname="M16",
        doc="    M16(;params...)\nPrevent G-code usage on the wrong machine\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M016.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string : The string to compare to MACHINE_NAME.\n\n\n# Description\n\nDo a case-sensitive comparison between the string argument and the configured `MACHINE_NAME`. If the machine name doesn't match, halt the printer so that a reset is required. This safety feature is meant to prevent G-code sliced for a specific machine from being used on any other machine.\n",
    ),
    (
        codetype="M",
        identifier=(163, 0, nothing),
        funname="M163",
        doc="    M163(;params...)\nSet a single mix factor for a mixing extruder.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M163.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Component index\n* P [Optional]: Mix factor\n\n\n# Description\n\nSet a single mix factor (in proportion to the sum total of all mix factors). The mix must be committed to a virtual tool by [`M164`](/docs/gcode/M164.html) before it takes effect.\n",
    ),
    (
        codetype="M",
        identifier=(164, 0, nothing),
        funname="M164",
        doc="    M164(;params...)\nSave the current mix as a virtual tool.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M164.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Tool index (active virtual tool if omitted)\n\n\n# Description\n",
    ),
    (
        codetype="M",
        identifier=(165, 0, nothing),
        funname="M165",
        doc="    M165(;params...)\nSet all mix factors for the mixing extruder.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M165.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* A [Optional]: Mix factor 1\n* B [Optional]: Mix factor 2\n* C [Optional]: Mix factor 3\n* D [Optional]: Mix factor 4\n* H [Optional]: Mix factor 5\n* I [Optional]: Mix factor 6\n\n\n# Description\n\nSet the mix for the active virtual extruder all at once. Any factors left out are set to 0.0. This is based on a reference implementation by Pìa Taubert.\n",
    ),
    (
        codetype="M",
        identifier=(166, 0, nothing),
        funname="M166",
        doc="    M166(;params...)\nSet a Gradient Mix\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M166.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* A : Starting Z Height. (Use `Z` to set the Ending Z Height.)\n* Z : Ending Z Height. (Use `A` to set the Starting Z Height.)\n* I : Starting Virtual Tool. The Gradient begins with this tool-mix. Below the Starting Z Height the Starting Virtual Tool fully applies.\n* J : Ending Virtual Tool. The Gradient transitions to this tool-mix as Z approaches the Ending Z Height. Above the Ending Z Height the Ending Virtual Tool fully applies.\n* S [Optional]: Enable / disable the gradient in manual mode. When using the tool index alias, tool-change commands determine whether or not the gradient is enabled.\n* T [Optional]: A tool index to reassign to the gradient. If no index is given, cancel the tool assignment.\n\n\n# Description\n\nUse [`M166`](/docs/gcode/M166.html) to set a gradient that will be automatically updated as the Z position changes during a print. The gradient smoothly transitions from one virtual tool to another between the given starting and ending Z heights. Below the starting height the starting virtual tool fully applies, and above the ending height the ending virtual tool fully applies.\n",
    ),
    (
        codetype="M",
        identifier=(17, 0, nothing),
        funname="M17",
        doc="    M17(;params...)\nEnable steppers\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M017.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: X Enable\n* Y [Optional]: Y Enable\n* Z [Optional]: Z Enable\n* E [Optional]: E Enable\n\n\n# Description\n\nThis command can be used to enable one or more steppers (`X`,`Y`,`Z`,`E`).\n\nIf no steppers are specified, this command enables all steppers immediately.\n\nIf one or more axes are specified, this command enables the specified steppers immediately.\n",
    ),
    (
        codetype="M",
        identifier=(18, 0, nothing),
        funname="M18",
        doc="    M18(;params...)\nDisable steppers (same as M84).\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M018.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Inactivity Timeout. If none specified, disable now.\n* X [Optional]: X Disable\n* Y [Optional]: Y Disable\n* Z [Optional]: Z Disable\n* E [Optional]: E Disable\n\n\n# Description\n\nThis command can be used to set the stepper inactivity timeout (`S`) or to disable one or more steppers (`X`,`Y`,`Z`,`E`).\n\nIf a timeout is given with `S`, this command just sets the stepper inactivity timeout.\n\nIf no steppers are specified, this command disables all steppers immediately.\n\nIf one or more axes are specified, this command disables the specified steppers immediately.\n",
    ),
    (
        codetype="M",
        identifier=(190, 0, nothing),
        funname="M190",
        doc="    M190(;params...)\nWait for the bed to reach target temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M190.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Material preset index. Overrides `S`.\n* S [Optional]: Target temperature (wait only when heating).\n* R [Optional]: Target temperature (wait for cooling or heating).\n\n\n# Description\n\nThis command optionally sets a new target temperature for the heated bed and waits for the target temperature to be reached before proceeding. If the temperature is set with `S` then it waits *only when heating*.\n\n\nSee also [`M140`](@ref).",
    ),
    (
        codetype="M",
        identifier=(191, 0, nothing),
        funname="M191",
        doc="    M191(;params...)\nWait for the chamber to reach target temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M191.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Target temperature (wait only when heating).\n* R [Optional]: Target temperature (wait for cooling or heating).\n\n\n# Description\n\nThis command optionally sets a new target chamber temperature and waits for the target temperature to be reached before proceeding. If the temperature is set with `S` then it waits *only when heating*.\n",
    ),
    (
        codetype="M",
        identifier=(192, 0, nothing),
        funname="M192",
        doc="    M192(;params...)\nWait for the probe temperature sensor to reach a target\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M192.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* R [Optional]: Temperature to wait for, whether heating or cooling.\n* S [Optional]: A minimum temperature to wait for. No wait if already higher.\n\n\n# Description\n\nUse this command to dwell until the probe reaches a given target temperature.\n\n\nSee also [`G76`](@ref) and [`M871`](@ref).",
    ),
    (
        codetype="M",
        identifier=(193, 0, nothing),
        funname="M193",
        doc="    M193(;params...)\nSet a new target laser coolant temperature.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M193.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Target laser coolant temperature.\n\n\n# Description\n\n`M193` optionally sets the cooler target temperature and dwells until the cooler temperature is equal to or below the target.\nAny value greater than the COOLER_MAXTEMP (set in Configuratin_adv.h) will be set to the COOLER_MAXTEMP value.\nUse [`M143`](/docs/gcode/M143.html) if you want to set the target temperature without waiting or to turn the cooler off.\n\n\nSee also [`M143`](@ref).",
    ),
    (
        codetype="M",
        identifier=(20, 0, nothing),
        funname="M20",
        doc="    M20(;params...)\nList the contents of the SD Card.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M020.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* F [Optional]: Only list BIN files. Used by host plugins to facilitate firmware upload.\n* L [Optional]: Include the long filename in the listing.\n* T [Optional]: Include the file timestamp in the listing.\n\n\n# Description\n\nList all printable files on the SD card back to the requesting serial port in compact DOS 8.3 format. Only files with `.gcode`, `.gco`, and `.g` extensions will be listed. Hidden files (beginning with `.`) will not be listed.\n\nHosts or serial controllers should send `M20` to get a DOS 8.3 file listing of the active media device that includes file sizes.\n\nThe file size is included in the output since Marlin 1.1.0.\n\n\nSee also [`M33`](@ref).",
    ),
    (
        codetype="M",
        identifier=(200, 0, nothing),
        funname="M200",
        doc="    M200(;params...)\nSet the diameter for volumetric extrusion.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M200.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* D [Optional]: Filament diameter\n* L [Optional]: Set volumetric extruder limit (in mm<sup>3</sup>/sec). `L0` disables the limit. (Requires `VOLUMETRIC_EXTRUDER_LIMIT`.)\n* S [Optional]: 0 to disable volumetric extrusion mode, otherwise volumetric is enabled.\n* T [Optional]: Extruder index. If omitted, the currently active extruder will be used.\n\n\n# Description\n\nSet the filament's current diameter and enable volumetric extrusion.\n\nIn volumetric extrusion mode the E axis specifies cubic mm instead of linear mm, and the firmware calculates how much length to extrude for the given volume based on the filament diameter.\n",
    ),
    (
        codetype="M",
        identifier=(201, 0, nothing),
        funname="M201",
        doc="    M201(;params...)\nSet acceleration and frequency limits for print moves.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M201.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: X axis max acceleration\n* Y [Optional]: Y axis max acceleration\n* Z [Optional]: Z axis max acceleration\n* E [Optional]: E axis max acceleration\n* T [Optional]: Target extruder (Requires `DISTINCT_E_FACTORS`)\n* F [Optional]: Planner frequency limit (Requires `XY_FREQUENCY_LIMIT`)\n* S [Optional]: Planner XY frequency minimum speed percentage (Requires `XY_FREQUENCY_LIMIT`)\n\n\n# Description\n\nSet the max acceleration for one or more axes (in current units-per-second squared). With `XY_FREQUENCY_LIMIT` you can also set the XY frequency limits.\n",
    ),
    (
        codetype="M",
        identifier=(203, 0, nothing),
        funname="M203",
        doc="    M203(;params...)\nSet maximum feedrate for one or more axes.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M203.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: X axis max feedrate\n* Y [Optional]: Y axis max feedrate\n* Z [Optional]: Z axis max feedrate\n* E [Optional]: E axis max feedrate\n* T [Optional]: Target extruder (Requires `DISTINCT_E_FACTORS`)\n\n\n# Description\n\nSet the max feedrate for one or more axes (in current units-per-second).\n",
    ),
    (
        codetype="M",
        identifier=(204, 0, nothing),
        funname="M204",
        doc="    M204(;params...)\nSet the starting acceleration for moves by type.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M204.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Printing acceleration. Used for moves that include extrusion (i.e., which employ the current tool).\n* R [Optional]: Retract acceleration. Used for extruder retraction moves.\n* T [Optional]: Travel acceleration. Used for moves that include no extrusion.\n* S [Optional]: Legacy parameter for move acceleration. Set both printing and travel acceleration.\n\n\n# Description\n\nSet the preferred starting acceleration (in units/s/s) for moves of different types. Send `M204` with no parameters to get current settings.\n",
    ),
    (
        codetype="M",
        identifier=(205, 0, nothing),
        funname="M205",
        doc="    M205(;params...)\nSet some advanced settings related to movement.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M205.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: X max jerk (units/s)\n* Y [Optional]: Y max jerk (units/s)\n* Z [Optional]: Z max jerk (units/s)\n* E [Optional]: E max jerk (units/s)\n* B [Optional]: Minimum segment time (µs)\n* S [Optional]: Minimum feedrate for print moves (units/s)\n* T [Optional]: Minimum feedrate for travel moves (units/s)\n* J [Optional]: Junction deviation (requires `JUNCTION_DEVIATION`)\n\n\n# Description\n\nSet various motion settings. See parameters for details.\n",
    ),
    (
        codetype="M",
        identifier=(206, 0, nothing),
        funname="M206",
        doc="    M206(;params...)\nApply a persistent offset\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M206.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: SCARA Psi offset (Requires `MORGAN_SCARA`)\n* T [Optional]: SCARA Theta offset (Requires `MORGAN_SCARA`)\n* X [Optional]: X home offset\n* Y [Optional]: Y home offset\n* Z [Optional]: Z home offset\n\n\n# Description\n\nUse [`M206`](/docs/gcode/M206.html) to apply a persistent offset to the native home position and coordinate space. This effectively shifts the coordinate space in the negative direction. See examples below.\n\n- The current position is adjusted to align to the new home offset values.\n- The home offset is persistent — added to the current position until changed.\n- Some uses include fine adjustment of Z position (without moving endstops) and shifting the coordinate space to print on a different part of the bed.\n\n\nSee also [`M428`](@ref) and [`M92`](@ref).",
    ),
    (
        codetype="M",
        identifier=(207, 0, nothing),
        funname="M207",
        doc="    M207(;params...)\nSet options for firmware-based retraction.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M207.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Retract length\n* W [Optional]: Retract swap length (multi-extruder)\n* F [Optional]: Retract feedrate (units/min)\n* Z [Optional]: Z lift on retraction\n\n\n# Description\n\nSet lengths, feedrate, and Z lift for firmware-based retraction. See parameters below.\n",
    ),
    (
        codetype="M",
        identifier=(208, 0, nothing),
        funname="M208",
        doc="    M208(;params...)\nFirmware-retraction recover settings.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M208.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Additional recover length. Can be negative to reduce recover length.\n* W [Optional]: Additional recover swap length. Can be negative to reduce the length.\n* F [Optional]: Recover feedrate (units/min)\n* R [Optional]: Swap recover feedrate (units/min)\n\n\n# Description\n\nSet the added lengths and feedrates for firmware-based retract recovery. The lengths set by [`M208`](/docs/gcode/M208.html) are applied *in addition* to the lengths set by [`M207`](/docs/gcode/M207.html) when un-retracting (aka \"recovering\") the filament. The new values will apply to all subsequent [`G11`](/docs/gcode/G011.html) commands.\n\nThe \"swap\" values apply to firmware-based recover moves after a tool-change.\n",
    ),
    (
        codetype="M",
        identifier=(209, 0, nothing),
        funname="M209",
        doc="    M209(;params...)\nEnable / disable auto-retraction.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M209.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Set Auto-Retract on/off\n\n\n# Description\n\nEnable or disable automatic retraction. This option is meant to help slicers that don't support [`G10`](/docs/gcode/G010.html)/[`G11`](/docs/gcode/G011.html). But it can be used to override retraction in any G-code.\n\nWhen auto-retract is enabled, all reversed E-only moves are treated as retraction. (Recover moves are also automatically overridden.) When disabled, E retraction derives from G-code.\n",
    ),
    (
        codetype="M",
        identifier=(21, 0, nothing),
        funname="M21",
        doc="    M21(;params...)\nAttempt to detect an SD card in the slot.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M021.html).\n\n\n\n\n# Description\n\nUse this command to mount the last-selected SD card or thumb drive.\n",
    ),
    (
        codetype="M",
        identifier=(211, 0, nothing),
        funname="M211",
        doc="    M211(;params...)\nSet and/or get the software endstops state\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M211.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Software endstops state (S1=enable S0=disable)\n\n\n# Description\n\nOptionally enable/disable software endstops, then report the current state.\n\nWith software endstops enabled, moves will be clipped to the physical boundaries from `[XYZ]_MIN_POS` to `[XYZ]_MAX_POS`.\n",
    ),
    (
        codetype="M",
        identifier=(217, 0, nothing),
        funname="M217",
        doc="    M217(;params...)\nSet length and speed for filament swapping\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M217.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* Q [Optional]: Prime active tool using TOOLCHANGE_FILAMENT_SWAP settings\n* S [Optional]: Swap length\n* B [Optional]: Extra resume\n* E [Optional]: Extra Prime Length\n* P [Optional]: Prime feedrate\n* R [Optional]: Retract feedrate\n* U [Optional]: Unretract feedrate\n* F [Optional]: Fan speed (0-255)\n* G [Optional]: Fan Time (seconds)\n* A [Optional]: Migration Auto Mode. Requires `TOOLCHANGE_MIGRATION_FEATURE`.\n* L [Optional]: Last Migration. Requires `TOOLCHANGE_MIGRATION_FEATURE`.\n* W [Optional]: Enable Park Feature. Requires `TOOLCHANGE_PARK` - was `SINGLENOZZLE_SWAP_PARK`.\n* X [Optional]: Park X position. Requires `TOOLCHANGE_PARK` - was `SINGLENOZZLE_SWAP_PARK`.\n* Y [Optional]: Park Y position. Requires `TOOLCHANGE_PARK` - was `SINGLENOZZLE_SWAP_PARK`.\n* V [Optional]: Enable First Prime on uninitialized Nozzles. Requires `TOOLCHANGE_FS_PRIME_FIRST_USED`.\n* Z [Optional]: Z Raise.\n\n\n# Description\n\nWhen changing tools on some setups, one filament may be retracted before the other is primed. This command sets the length and feedrates used for the filament swap retract and prime.\n\nIf no parameters are given this command reports the current filament swap parameters.\n",
    ),
    (
        codetype="M",
        identifier=(218, 0, nothing),
        funname="M218",
        doc="    M218(;params...)\nSet the offset of a hotend (from hotend 0).\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M218.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* T [Optional]: Hotend index. Active extruder by default.\n* X [Optional]: Hotend X offset\n* Y [Optional]: Hotend Y offset\n* Z [Optional]: Hotend Z offset. Requires `DUAL_X_CARRIAGE` or `SWITCHING_NOZZLE`.\n\n\n# Description\n\nTo keep nozzles aligned to the work area between tool-changes, the firmware needs to know how they relate to each other.\n",
    ),
    (
        codetype="M",
        identifier=(22, 0, nothing),
        funname="M22",
        doc="    M22(;params...)\nSimulate ejection of the SD card\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M022.html).\n\n\n\n\n# Description\n\nIf Marlin gets confused about the state of the SD card, this command can be used to simulate an ejection of the SD card.\n\nRe-insert the SD card or use [`M21`](/docs/gcode/M021.html) to enable the SD card following [`M22`](/docs/gcode/M022.html).\n",
    ),
    (
        codetype="M",
        identifier=(220, 0, nothing),
        funname="M220",
        doc="    M220(;params...)\nSet the global feedrate percentage.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M220.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Feedrate percentage\n* B [Optional]: Back up current factor\n* R [Optional]: Restore the last-saved factor\n\n\n# Description\nSet speed percentage factor, aka \"Feed Rate\" which applies to all G-code-based moves in all (X, Y, Z, and E) axes. Report the current speed percentage factor if no parameter is specified.\n",
    ),
    (
        codetype="M",
        identifier=(221, 0, nothing),
        funname="M221",
        doc="    M221(;params...)\nSet the flow percentage, which applies to all E moves.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M221.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Feedrate percentage\n* T [Optional]: Target extruder (requires multi-extruder). Default is the active extruder.\n\n\n# Description\n\nSet the flow percentage, which applies to all E moves added to the planner.\n",
    ),
    (
        codetype="M",
        identifier=(226, 0, nothing),
        funname="M226",
        doc="    M226(;params...)\nWait for a pin to have a given state.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M226.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Pin number\n* S [Optional]: State 0 or 1. Default -1 for inverted.\n\n\n# Description\n\nWait for a pin to have a certain value or state.\n",
    ),
    (
        codetype="M",
        identifier=(23, 0, nothing),
        funname="M23",
        doc="    M23(;params...)\nSelect an SD file to be executed\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M023.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* filename : The filename of the file to open.\n\n\n# Description\n\nSelect an SD file for printing or processing. Follow with [`M24`](/docs/gcode/M024.html) to run the selected file.\n\n\nSee also [`M24`](@ref).",
    ),
    (
        codetype="M",
        identifier=(24, 0, nothing),
        funname="M24",
        doc="    M24(;params...)\nStart or resume a file selected with [`M23`](/docs/gcode/M023.html)\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M024.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Position in file to resume from (requires `POWER_LOSS_RECOVERY`)\n* T [Optional]: Elapsed time since start of print (requires `POWER_LOSS_RECOVERY`)\n\n\n# Description\n\nStart an SD print or resume the paused SD print. If `PARK_HEAD_ON_PAUSE` is enabled, unpark the nozzle.\n\nIf `POWER_LOSS_RECOVERY` is enabled [`M24`](/docs/gcode/M024.html) accepts parameters which allow resuming the print from a specific point in the file. These parameters are usually only used in this scenario.\n\n\nSee also [`M23`](@ref).",
    ),
    (
        codetype="M",
        identifier=(240, 0, nothing),
        funname="M240",
        doc="    M240(;params...)\nTrigger a camera shutter\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M240.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* A [Optional]: Offset to the X return position. (Requires `PHOTO_POSITION`)\n* B [Optional]: Offset to the Y return position. (Requires `PHOTO_POSITION`)\n* D [Optional]: Duration to hold down the shutter switch. (Requires `PHOTO_SWITCH_POSITION` and `PHOTO_SWITCH_MS`)\n* F [Optional]: Feedrate for the main photo moves. If omitted, the homing feedrate will be used. (Requires `PHOTO_POSITION`)\n* I [Optional]: Shutter switch X position. If omitted, the photo move X position applies. (Requires `PHOTO_SWITCH_POSITION`)\n* J [Optional]: Shutter switch Y position. If omitted, the photo move Y position applies. (Requires `PHOTO_SWITCH_POSITION`)\n* P [Optional]: Delay after pressing the shutter switch. (Requires `PHOTO_SWITCH_POSITION` and `PHOTO_SWITCH_MS`)\n* R [Optional]: Retract/recover length. (Requires `PHOTO_POSITION`)\n* S [Optional]: Retract/recover feedrate. (Requires `PHOTO_POSITION`)\n* X [Optional]: Main photo move X position. (Requires `PHOTO_POSITION`)\n* Y [Optional]: Main photo move Y position. (Requires `PHOTO_POSITION`)\n* Z [Optional]: Main photo move Z raise. (Requires `PHOTO_POSITION`)\n\n\n# Description\n\nTrigger a camera shutter using a digital pin or by bumping a physical switch.\n",
    ),
    (
        codetype="M",
        identifier=(25, 0, nothing),
        funname="M25",
        doc="    M25(;params...)\nPause printing from the SD card\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M025.html).\n\n\n\n\n# Description\n\nPause the SD print in progress. If `PARK_HEAD_ON_PAUSE` is enabled, park the nozzle.\n",
    ),
    (
        codetype="M",
        identifier=(250, 0, nothing),
        funname="M250",
        doc="    M250(;params...)\nSet and/or get the LCD contrast.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M250.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: Contrast value\n\n\n# Description\n\nSet and/or get the LCD contrast. The value is constrained based on the LCD.\n",
    ),
    (
        codetype="M",
        identifier=(255, 0, nothing),
        funname="M255",
        doc="    M255(;params...)\nSet and/or get the LCD Sleep Timeout.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M255.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Timeout delay in minutes.\n\n\n# Description\n\nSet and/or get the LCD sleep / backlight timeout, in minutes. The display will go blank to save energy after your specified period has elapsed with no activity. The screen will wake up if it needs to display an important message.\n",
    ),
    (
        codetype="M",
        identifier=(256, 0, nothing),
        funname="M256",
        doc="    M256(;params...)\nSet and/or get the LCD brightness.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M256.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B [Optional]: Brightness value (0 - 255)\n\n\n# Description\n\nSet and/or get the LCD brightness. The value is constrained based on the LCD, but typically a value of 0 is the dimmest and 255 is the brightest.\n",
    ),
    (
        codetype="M",
        identifier=(26, 0, nothing),
        funname="M26",
        doc="    M26(;params...)\nSet the SD read position\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M026.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Next file read position to set\n\n\n# Description\n\nSet the next read position in the open SD file.\n",
    ),
    (
        codetype="M",
        identifier=(260, 0, nothing),
        funname="M260",
        doc="    M260(;params...)\nSend data to the I2C bus.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M260.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* A [Optional]: The bus address to send to\n* B [Optional]: The byte to add to the buffer\n* R [Optional]: Reset and rewind the I2C buffer\n* S [Optional]: Send flag. Flush the buffer to the bus.\n\n\n# Description\n\nUtility to send data over the I2C bus.\n",
    ),
    (
        codetype="M",
        identifier=(261, 0, nothing),
        funname="M261",
        doc="    M261(;params...)\nRequest and echo bytes from the I2C bus.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M261.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* A : The bus address to request bytes from\n* B : The number of bytes to request\n* S [Optional]: Output style. Default is 0 (raw echo) if nothing else is given.\n\n\n# Description\n\nRequest bytes from the I2C bus and echo them to the host. To find out how to do more useful things with I2C see the I2C master / slave article.\n",
    ),
    (
        codetype="M",
        identifier=(27, 0, nothing),
        funname="M27",
        doc="    M27(;params...)\nPrint SD progress to serial\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M027.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Interval between auto-reports. `S0` to disable  (requires `AUTO_REPORT_SD_STATUS`)\n* C [Optional]: Report the filename and long filename of the current file\n\n\n# Description\n\nWith no parameter, report the current SD read position in the form \"`SD printing byte 123/12345`.\" If no file is open the response is \"`Not SD printing`.\"\n\nWith `S<seconds>`, set the SD status auto-report interval. (Requires `AUTO_REPORT_SD_STATUS`)\n\nWith `C`, get the currently open file's name (and long filename if possible). Print \"`(no file)`\" if no file is open.\n",
    ),
    (
        codetype="M",
        identifier=(28, 0, nothing),
        funname="M28",
        doc="    M28(;params...)\nStart writing to a file on the SD card\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M028.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B1 [Optional]: Set an optimized binary file transfer mode. (Requires `BINARY_FILE_TRANSFER`)\n* filename : File name to write\n\n\n# Description\n\nThis command starts a file write. All commands received by Marlin are written to the file and are not executed until [`M29`](/docs/gcode/M029.html) closes the file.\n\nWith 'B1', set an optimized binary file transfer mode. (Requires `BINARY_FILE_TRANSFER`)\n\n\nSee also [`M29`](@ref) and [`M928`](@ref).",
    ),
    (
        codetype="M",
        identifier=(280, 0, nothing),
        funname="M280",
        doc="    M280(;params...)\nSet or get a servo position.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M280.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Servo index to set or get\n* S : Servo position to set. Omit to read the current position.\n\n\n# Description\n\nSet or get the position of a servo.\n",
    ),
    (
        codetype="M",
        identifier=(281, 0, nothing),
        funname="M281",
        doc="    M281(;params...)\nSet servo deploy and/or stow angles\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M281.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Servo index to update / report.\n* L [Optional]: Deploy angle in degrees.\n* U [Optional]: Stow angle in degrees.\n\n\n# Description\n\nSet or get the position of a servo. Without `L` or `U` the current values will be reported.\n",
    ),
    (
        codetype="M",
        identifier=(282, 0, nothing),
        funname="M282",
        doc="    M282(;params...)\nDetach a servo until its next move\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M282.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Index of the servo to detach.\n\n\n# Description\n\nDetach a servo, which turns off its power. The servo will be attached (powered up) before its next move.\n",
    ),
    (
        codetype="M",
        identifier=(29, 0, nothing),
        funname="M29",
        doc="    M29(;params...)\nStop writing the file, end logging.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M029.html).\n\n\n\n\n# Description\n\nStop writing to a file that was begun with [`M28`](/docs/gcode/M028.html) or [`M928`](/docs/gcode/M928.html). Logging is disabled.\n\n\nSee also [`M28`](@ref) and [`M928`](@ref).",
    ),
    (
        codetype="M",
        identifier=(290, 0, nothing),
        funname="M290",
        doc="    M290(;params...)\nBabystep one or more axes\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M290.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: A distance on the X axis\n* Y [Optional]: A distance on the Y axis\n* Z [Optional]: A distance on the Z axis\n* S [Optional]: Alias for Z\n* P [Optional]: Use `P0` to leave the Probe Z Offset unaffected. (Requires `BABYSTEP_ZPROBE_OFFSET`)\n\n\n# Description\n\nApply babysteps to one or more axes using current units. Offsets applied with [`M290`](/docs/gcode/M290.html) aren't added to the current coordinates, but are intended for making small adjustments, especially in the Z axis, at the start of a print.\n\nNote that when `BABYSTEP_ZPROBE_OFFSET` is enabled, [`M290`](/docs/gcode/M290.html) also modifies the Probe Z Offset (with no immediate effects). The new Z offset applies to successive probing operations, and can be saved with [`M500`](/docs/gcode/M500.html). This behavior is means to coincide with the LCD Menu replacing \"Z Babystepping\" with \"Babystep Z Probe Offset.\" To avoid this side-effect, use `M290 P0` or leave `BABYSTEP_ZPROBE_OFFSET` disabled.\n",
    ),
    (
        codetype="M",
        identifier=(3, 0, nothing),
        funname="M3",
        doc="    M3(;params...)\nSet the spindle CW speed or laser power\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M003.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Spindle speed or laser power in the configured value range (see `CUTTER_POWER_DISPLAY`). (PWM 0-255 by default)\n* O [Optional]: Spindle speed or laser power in PWM 0-255 value range\n* I [Optional]: Inline mode ON / OFF.\n\n\n# Description\n\nWait for moves to complete, then set the spindle speed (clockwise) or laser power.\n\n\nSee also [`M4`](@ref) and [`M5`](@ref).",
    ),
    (
        codetype="M",
        identifier=(30, 0, nothing),
        funname="M30",
        doc="    M30(;params...)\nDelete a specified file from SD.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M030.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* filename : The filename of the file to delete.\n\n\n# Description\n\nDelete a file from the SD card.\n",
    ),
    (
        codetype="M",
        identifier=(300, 0, nothing),
        funname="M300",
        doc="    M300(;params...)\nPlay a single tone, buzz, or beep.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M300.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Duration (1ms)\n* S [Optional]: Frequency (260Hz)\n\n\n# Description\n\nAdd a tone to the tone queue.\n",
    ),
    (
        codetype="M",
        identifier=(301, 0, nothing),
        funname="M301",
        doc="    M301(;params...)\nSet PID values for a hotend.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M301.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* E [Optional]: Extruder index to set. Default 0.\n* P [Optional]: Proportional value\n* I [Optional]: Integral value\n* D [Optional]: Derivative value\n* C [Optional]: C term (requires `PID_EXTRUSION_SCALING`)\n* L [Optional]: Extrusion scaling queue length (requires `PID_EXTRUSION_SCALING`)\n* F [Optional]: F term (requires `PID_FAN_SCALING`)\n\n\n# Description\n\nSet the values that control the PID loop for a hotend.\n",
    ),
    (
        codetype="M",
        identifier=(302, 0, nothing),
        funname="M302",
        doc="    M302(;params...)\nSet minimum extrusion temperature, allow cold extrusion.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M302.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Minimum temperature for safe extrusion\n* P [Optional]: Flag to allow extrusion at any temperature\n\n\n# Description\n\nSet the minimum extrusion temperature, potentially allowing E movement at temperatures below the melting point of the material.\n",
    ),
    (
        codetype="M",
        identifier=(303, 0, nothing),
        funname="M303",
        doc="    M303(;params...)\nAuto-tune the PID system to find stable values.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M303.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* E [Optional]: Hotend index (-1 for heated bed). Default 0.\n* C [Optional]: Cycles. At least 3 cycles are required. Default 5.\n* S [Optional]: Target temperature\n* U [Optional]: Use PID result. (Otherwise just print it out.)\n* D [Optional]: Toggle PID debug output on / off (and take no further action). (Requires `PID_DEBUG`)\n\n\n# Description\n\nThis command initiates a process of heating and cooling to determine the proper PID values for the specified hotend or the heated bed.\n",
    ),
    (
        codetype="M",
        identifier=(304, 0, nothing),
        funname="M304",
        doc="    M304(;params...)\nSet PID values for the heated bed.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M304.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Proportional value\n* I [Optional]: Integral value\n* D [Optional]: Derivative value\n\n\n# Description\n\nSet the values that control the PID loop for the heated bed.\n",
    ),
    (
        codetype="M",
        identifier=(305, 0, nothing),
        funname="M305",
        doc="    M305(;params...)\nSet (or report) custom thermistor parameters\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M305.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Thermistor table index\n* R [Optional]: Pullup resistor value\n* T [Optional]: Resistance at 25C\n* B [Optional]: Thermistor \"beta\" value\n* C [Optional]: Steinhart-Hart Coefficient 'C'\n\n\n# Description\nAllows for custom temperature sensor.\n",
    ),
    (
        codetype="M",
        identifier=(306, 0, nothing),
        funname="M306",
        doc="    M306(;params...)\nSet MPC values for a hotend.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M306.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* A [Optional]: Ambient heat transfer coefficient (no fan).\n* C [Optional]: Heatblock Capacity (joules/kelvin)\n* E [Optional]: Extruder index. If omitted, the command applies to the active extruder.\n* F [Optional]: Ambient heat transfer coefficient (fan on full).\n* H [Optional]: Filament Heat Capacity (joules/kelvin/mm)\n* P [Optional]: Heater power in watts\n* R [Optional]: Sensor responsiveness (= transfer coefficient / heat capacity).\n* T [Optional]: Autotune the selected extruder.\n\n\n# Description\n",
    ),
    (
        codetype="M",
        identifier=(31, 0, nothing),
        funname="M31",
        doc="    M31(;params...)\nReport the current print time.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M031.html).\n\n\n\n\n# Description\n\nThis command reports the time elapsed since the start of the current print job to the host. When printing from SD card, the print job timer starts as soon as SD printing starts.\n\nIf `PRINTJOB_TIMER_AUTOSTART` is enabled then the first [`M109`](/docs/gcode/M109.html) or [`M190`](/docs/gcode/M190.html) command received from the host will also start the print job timer.\n\nFor manual control from the host, use [`M75`](/docs/gcode/M075.html), [`M76`](/docs/gcode/M076.html), and [`M77`](/docs/gcode/M077.html) to start, pause, and stop the print job timer.\n\n\nSee also [`M75`](@ref), [`M76`](@ref), [`M77`](@ref) and [`M78`](@ref).",
    ),
    (
        codetype="M",
        identifier=(32, 0, nothing),
        funname="M32",
        doc="    M32(;params...)\nBegin an SD print from a file.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M032.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Sub-Program flag\n* S [Optional]: Starting file offset\n\n\n# Description\n\nThe [`M32`](/docs/gcode/M032.html) command exists to allow G-code to load other G-code files and run them as sub-programs. This can be useful to change the start / end G-code for a batch of files without having to edit them all.\n\nFor legacy reasons [`M32`](/docs/gcode/M032.html) uses '`!`' (and '`#`') to delimit the filepath parameter. The filepath must be the last parameter.\n",
    ),
    (
        codetype="M",
        identifier=(33, 0, nothing),
        funname="M33",
        doc="    M33(;params...)\nConvert a short pathname to a long pathname.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M033.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* path : DOS 8.3 path to a file or folder\n\n\n# Description\n\nGet the long name for a file based on the DOS 8.3 path.\n",
    ),
    (
        codetype="M",
        identifier=(34, 0, nothing),
        funname="M34",
        doc="    M34(;params...)\nSet SDCard file sorting options.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M034.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Sorting on/off\n* F [Optional]: Folder Sorting\n\n\n# Description\n\nMarlin now contains support for SDCard alphabetical file sorting in the LCD menus. This feature uses free SRAM to create a sorting index for up to the first 256 files in the current folder, and (if you have _lots_ of SRAM) can optionally cache file listings for a more responsive UI. Buffering only occurs during file browsing. Otherwise the SRAM is freed.\n",
    ),
    (
        codetype="M",
        identifier=(350, 0, nothing),
        funname="M350",
        doc="    M350(;params...)\nSet micro-stepping for drivers that support it\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M350.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B [Optional]: Set micro-stepping for the 5th stepper driver.\n* S [Optional]: Set micro-stepping for all 5 stepper drivers.\n* X [Optional]: Set micro-stepping for the X stepper driver.\n* Y [Optional]: Set micro-stepping for the Y stepper driver.\n* Z [Optional]: Set micro-stepping for the Z stepper driver.\n* E [Optional]: Set micro-stepping for the E0 stepper driver.\n\n\n# Description\n\nIf your board has digital micro-stepping pins (`X_MS1`, `Y_MS1`, etc.), use this command to set the micro-steps.\n",
    ),
    (
        codetype="M",
        identifier=(351, 0, nothing),
        funname="M351",
        doc="    M351(;params...)\nDirectly set the micro-stepping pins\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M351.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Select the pin to set for all specified axes.\n* B [Optional]: Set the MS1/2 pin for the 5th stepper driver.\n* X [Optional]: Set the MS1/2 pin for the X stepper driver.\n* Y [Optional]: Set the MS1/2 pin for the Y stepper driver.\n* Z [Optional]: Set the MS1/2 pin for the Z stepper driver.\n* E [Optional]: Set the MS1/2 pin for the E stepper driver.\n\n\n# Description\n\nIf your board has digital micro-stepping pins (`X_MS1`, `Y_MS1`, etc.), use this command to set the micro-steps.\n\nAt the time of this writing, the only boards which have digital micro-stepping pins are:\n\n- MINIRAMBO\n- RAMBO\n- SCOOVO_X9H\n- MKS_BASE_common\n- ALLIGATOR_R2\n- ARCHIM1\n- PRINTRBOARD_G2\n- 5DPRINT\n",
    ),
    (
        codetype="M",
        identifier=(355, 0, nothing),
        funname="M355",
        doc="    M355(;params...)\nTurn the case light on or off, set brightness\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M355.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Set the brightness factor from 0 to 255.\n* S [Optional]: Turn the case light on or off.\n\n\n# Description\n\nSet the case light power state and/or brightness.\n",
    ),
    (
        codetype="M",
        identifier=(360, 0, nothing),
        funname="M360",
        doc="    M360(;params...)\nMove to Theta A\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M360.html).\n\n\n\n\n# Description\n\nMove the nozzle to SCARA calibration position Theta 0 (A0 B120) for calibration of \"zero degrees.\"\n",
    ),
    (
        codetype="M",
        identifier=(361, 0, nothing),
        funname="M361",
        doc="    M361(;params...)\nMove to Theta-B\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M361.html).\n\n\n\n\n# Description\n\nMove the nozzle to SCARA Theta-B calibration position Theta 90 (A90 B130) for calibration of \"90 degrees steps-per-degree.\"\n",
    ),
    (
        codetype="M",
        identifier=(362, 0, nothing),
        funname="M362",
        doc="    M362(;params...)\nMove to Psi-A\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M362.html).\n\n\n\n\n# Description\n\nMove the nozzle to SCARA Psi-A calibration position Psi 0 (A60 B180) for calibration of \"zero degrees.\"\n",
    ),
    (
        codetype="M",
        identifier=(363, 0, nothing),
        funname="M363",
        doc="    M363(;params...)\nMove to Psi-B\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M363.html).\n\n\n\n\n# Description\n\nMove the nozzle to SCARA Psi-B calibration position Psi 90 (A50 B90) for calibration of \"90 degrees steps-per-degree.\"\n",
    ),
    (
        codetype="M",
        identifier=(364, 0, nothing),
        funname="M364",
        doc="    M364(;params...)\nMove to Psi-C\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M364.html).\n\n\n\n\n# Description\n\nMove the nozzle to SCARA Psi-C calibration position Theta-Psi 90 (A45 B135) for calibration of \"90 degrees to Theta.\"\n",
    ),
    (
        codetype="M",
        identifier=(380, 0, nothing),
        funname="M380",
        doc="    M380(;params...)\nActivate\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M380.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Solenoid index (Requires `MANUAL_SOLENOID_CONTROL`)\n\n\n# Description\n\nActivate the solenoid on the active extruder.\n",
    ),
    (
        codetype="M",
        identifier=(381, 0, nothing),
        funname="M381",
        doc="    M381(;params...)\nDeactivate all extruder solenoids\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M381.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Solenoid index (Requires `MANUAL_SOLENOID_CONTROL`)\n\n\n# Description\n\nDeactivate all solenoids on all extruders.\n",
    ),
    (
        codetype="M",
        identifier=(4, 0, nothing),
        funname="M4",
        doc="    M4(;params...)\nSet the spindle CCW speed or laser power\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M004.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Spindle speed or laser power in the configured value range (see `CUTTER_POWER_UNIT`). (PWM 0-255 by default)\n* O [Optional]: Spindle speed or laser power in PWM 0-255 value range\n* I [Optional]: Inline mode ON / OFF.\n\n\n# Description\n\nWait for moves to complete, then set the spindle speed (counter-clockwise) or laser power.\n\n\nSee also [`M3`](@ref) and [`M5`](@ref).",
    ),
    (
        codetype="M",
        identifier=(400, 0, nothing),
        funname="M400",
        doc="    M400(;params...)\nWait for all moves to finish\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M400.html).\n\n\n\n\n# Description\n\nThis command causes G-code processing to pause and wait in a loop until all moves in the planner are completed.\n",
    ),
    (
        codetype="M",
        identifier=(401, 0, nothing),
        funname="M401",
        doc="    M401(;params...)\nDeploy the bed probe\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M401.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* H [Optional]: Report the current BLTouch High Speed (HS) Mode state and exit.\n* S [Optional]: Set the BLTouch High Speed (HS) Mode state and exit without deploy.\n\n\n# Description\n\nDeploy the bed probe. The Z axis may raise up to make room for the probe to deploy.\n",
    ),
    (
        codetype="M",
        identifier=(402, 0, nothing),
        funname="M402",
        doc="    M402(;params...)\nStow the bed probe\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M402.html).\n\n\n\n\n# Description\n\nStow the bed probe. The Z axis may raise up to make room for the probe to stow.\n",
    ),
    (
        codetype="M",
        identifier=(403, 0, nothing),
        funname="M403",
        doc="    M403(;params...)\nSet filament type for Multi-Material Unit 2.0\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M403.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* E : The MMU2 slot [0..4] to set the material type for\n* F : The filament type.\n\n\n# Description\n\nSet the filament type for a Průša MMU2 (or compatible) material slot.\n",
    ),
    (
        codetype="M",
        identifier=(404, 0, nothing),
        funname="M404",
        doc="    M404(;params...)\nSet the nominal diameter for filament width sensor auto-flow\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M404.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* W [Optional]: The new nominal width value\n\n\n# Description\n\nReport or set the nominal filament width, such as 1.75 or 3.00.\n\nThis value is used to determine the percentage difference when auto-adjusting flow in response to the measured filament width, and should match the value used for filament width in your slicer settings.\n",
    ),
    (
        codetype="M",
        identifier=(405, 0, nothing),
        funname="M405",
        doc="    M405(;params...)\nEnable filament width sensor flow control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M405.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* D [Optional]: Distance from measurement point to hot end. If not given, the previous value will be used. The default startup value is set by `MEASUREMENT_DELAY_CM`.\n\n\n# Description\n\nTurn on the filament width sensor and start using it to do flow control. Initially, the filament between the sensor and the hot-end will be treated as the nominal width.\n",
    ),
    (
        codetype="M",
        identifier=(406, 0, nothing),
        funname="M406",
        doc="    M406(;params...)\nDisable filament width sensor flow control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M406.html).\n\n\n\n\n# Description\n\nTurn off the filament width sensor and stop using it to do flow control.\n",
    ),
    (
        codetype="M",
        identifier=(407, 0, nothing),
        funname="M407",
        doc="    M407(;params...)\nReport the measured filament width\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M407.html).\n\n\n\n\n# Description\n\nReport the current measured filament width to the host.\n",
    ),
    (
        codetype="M",
        identifier=(410, 0, nothing),
        funname="M410",
        doc="    M410(;params...)\nStop all steppers instantly\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M410.html).\n\n\n\n\n# Description\n\nStop all steppers instantly. Since there will be no deceleration, steppers are expected to be out of position after this command.\n",
    ),
    (
        codetype="M",
        identifier=(412, 0, nothing),
        funname="M412",
        doc="    M412(;params...)\nGet/set filament runout detection parameters\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M412.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* D [Optional]: Set the filament runout distance.\n* H [Optional]: Flag to enable or disable host handling of a filament runout.\n* S [Optional]: Flag to enable or disable Filament Runout Detection. If omitted, the current enabled state will be reported.\n* R [Optional]: Flag to reset the filament runout sensor. Not needed with `S`.\n\n\n# Description\n\nGet or set filament runout status and distance. Omit all parameters to get a report of the current stats. Enable or disable filament runout detection with `S` and set distance with `D`. When filament sensors are enabled, Marlin will respond to a filament runout by running the configured G-code (usually [`M600` Filament Change](/docs/gcode/M600.html)). When filament runout detection is disabled, Marlin will take no action for filament runout.\n",
    ),
    (
        codetype="M",
        identifier=(413, 0, nothing),
        funname="M413",
        doc="    M413(;params...)\nEnable / disable power-loss recovery\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M413.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Flag to enable or disable Power-loss Recovery. If omitted, the current enabled state will be reported.\n\n\n# Description\n\n`M413` is used to turn the **Power-loss Recovery** feature on and off. When Power-loss Recovery is enabled and Marlin is running a print job from the SD Card or Flash Drive, it periodically saves the print job state to the SD Card / Flash Drive. If the machine crashes or a power outage occurs, Marlin presents the option to resume the interrupted print job.\n\nThis feature is able to operate without a power-loss detection circuit by writing the recovery file periodically (_e.g.,_ once per layer). However, with a `POWER_LOSS_PIN` Marlin only writes the recovery info when a power-loss is actually detected. This method is preferred because the print will be resumed exactly where it was interrupted (rather than repeating the last layer), and the SD card or Flash Drive will incur much less wear.\n",
    ),
    (
        codetype="M",
        identifier=(42, 0, nothing),
        funname="M42",
        doc="    M42(;params...)\nSet an analog or digital pin to a specified state.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M042.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Ignore protection on pins that Marlin is using.\n* T [Optional]: Set the pin mode. Prior to Marlin 2.0.9.4 this is set with the `M` parameter.\n* P [Optional]: A digital pin number (even for analog pins) to write to. (`LED_PIN` if omitted)\n* S : The state to set. PWM pins may be set from 0-255.\n\n\n# Description\n\nFor custom hardware not officially supported in Marlin, you can often just connect up an unused pin and use [`M42`](/docs/gcode/M042.html) to control it.\n",
    ),
    (
        codetype="M",
        identifier=(420, 0, nothing),
        funname="M420",
        doc="    M420(;params...)\nGet and/or set bed leveling state and parameters\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M420.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* L [Optional]: Load mesh from EEPROM index (Requires `AUTO_BED_LEVELING_UBL` and `EEPROM_SETTINGS`)\n* S [Optional]: Set enabled or disabled. A valid mesh is required to enable bed leveling. If the mesh is invalid / incomplete leveling will not be enabled.\n* V [Optional]: Verbose: Print the stored mesh / matrix data\n* T [Optional]: Format to print the mesh data\n* Z [Optional]: Set Z fade height (Requires `ENABLE_LEVELING_FADE_HEIGHT`)\n- With Fade enabled, bed leveling correction is gradually reduced as the nozzle gets closer to the Fade height. Above the Fade height no bed leveling compensation is applied at all, so movement is machine true.\n- Set to 0 to disable fade, and leveling compensation will be fully applied to all layers of the print.\n\n* C [Optional]: Center the mesh on the mean of the lowest and highest points\n\n\n# Description\n\nGet and/or set bed leveling state. For mesh-based leveling systems use `Z` parameter to set the Z Fade Height.\n\nWith `AUTO_BED_LEVELING_UBL` you can use `L` to load a mesh from EEPROM.\n\n\nSee also [`G29`](@ref) and [`M421`](@ref).",
    ),
    (
        codetype="M",
        identifier=(421, 0, nothing),
        funname="M421",
        doc="    M421(;params...)\nSet a single mesh Z height\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M421.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: X index into the mesh array\n* J [Optional]: Y index into the mesh array\n* X [Optional]: X position (which should be very close to a grid line) (`MESH_BED_LEVELING` only)\n* Y [Optional]: Y position (which should be very close to a grid line) (`MESH_BED_LEVELING` only)\n* Z [Optional]: The new Z value to set\n* Q [Optional]: A value to add to the existing Z value\n* C [Optional]: Set the mesh point closest to the current nozzle position (`AUTO_BED_LEVELING_UBL` only)\n* N [Optional]: Set the mesh point to undefined (`AUTO_BED_LEVELING_UBL` only)\n\n\n# Description\n\nThis command is used to set a single Z value for a mesh point in the stored bed leveling data.\n\nAllowed forms are `M421 In Jn Zn`, `M421 Xn Yn Zn` (`MESH_BED_LEVELING` only) or `M421 C Zn` (`AUTO_BED_LEVELING_UBL` only).\n\n\nSee also [`G29`](@ref) and [`M420`](@ref).",
    ),
    (
        codetype="M",
        identifier=(422, 0, nothing),
        funname="M422",
        doc="    M422(;params...)\nSet a Z motor position for G34 Auto-Alignment\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M422.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* R [Optional]: Reset alignment and known points to the defaults. This will also be done by [`M502`](/docs/gcode/M502.html).\n* S [Optional]: One-based index of a Z-Stepper whose probing-point will be set.\n* W [Optional]: One-based index of a Z-Stepper whose known position will be set.\n* X [Optional]: X position\n* Y [Optional]: Y position\n\n\n# Description\n\nSet an XY probe or known position for a given Z Stepper. Either the `S` or `W` parameter must be given, along with `X` and `Y` positions. The `W` parameter exists only when `Z_STEPPER_ALIGN_STEPPER_XY` is defined, providing known stepper positions.\n\n\nSee also [`G34`](@ref).",
    ),
    (
        codetype="M",
        identifier=(423, 0, nothing),
        funname="M423",
        doc="    M423(;params...)\nModify, reset, and report X-Axis Twist Compensation data\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M423.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* R [Optional]: Reset the Twist Compensation array to the configured default values.\n* A [Optional]: Set the X-Axis Twist Compensation starting X position.\n* I [Optional]: Set the X-Axis Twist Compensation X-spacing.\n* X [Optional]: Zero-based index into the Twist Compensation array. Requires a `Z` value.\n* Z [Optional]: A Z-offset value to set in the Twist Compensation array. Requires an `X` index.\n\n\n# Description\n\nUse `M423` to reset, modify, or report X-Twist Compensation data.\n\nX-Twist Compensation is applied to the mesh on [`G29`](docs/gcode/G029)) to correct for a twisted X gantry. Meaningful X-Twist Compensation data is generated using a guided procedure in the LCD menu that compares measurements taken by the bed probe to readings taken manually at the nozzle. Since manual measurements are prone to inaccuracy, a metal feeler gauge is recommended over a paper test. If the first layer is still imperfect, `M423` can then be used to correct for small errors.\n\n\nSee also [`G29`](@ref).",
    ),
    (
        codetype="M",
        identifier=(425, 0, nothing),
        funname="M425",
        doc="    M425(;params...)\nEnable and tune backlash compensation\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M425.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* F [Optional]: Enable or disables backlash correction, or sets an intermediate fade-out (0.0 = none; 1.0 = 100%)\n* S [Optional]: Distance over which backlash correction is spread\n* X [Optional]: Set the backlash distance on X (mm; 0 to disable)\n* Y [Optional]: Set the backlash distance on Y (mm; 0 to disable)\n* Z [Optional]: Set the backlash distance on Z (mm; 0 to disable)\n* Z [Optional]: When `MEASURE_BACKLASH_WHEN_PROBING` is enabled, loads the measured backlash into the backlash distance parameter\n\n\n# Description\n\nBacklash compensation will add extra steps to one or more segments whenever a motor reverses direction.\n\nBy default, steps are added to the first segment after a direction change. This gives the best dimensional accuracy but may cause marks to appear in the print. Smoothing spreads the added steps over multiple consecutive segments to prevent blemishes in the print, at the expense of dimensional accuracy.\n\nBacklash compensation can be configured at either compile-time or run-time. Enable `BACKLASH_GCODE` to turn on [`M425`](/docs/gcode/M425.html) and a \"Backlash\" menu item.\n\nBacklash can be measured automatically on all axes with [`G425`](/docs/gcode/G425.html) or on Z only with [`G29`](/docs/gcode/G029.html) when `MEASURE_BACKLASH_WHEN_PROBING` is enabled.\n",
    ),
    (
        codetype="M",
        identifier=(428, 0, nothing),
        funname="M428",
        doc="    M428(;params...)\nSet home offsets based on current position\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M428.html).\n\n\n\n\n# Description\n\nUse [`M428`](/docs/gcode/M428.html) to set a persistent offset to the native home position and coordinate space by assigning the current position as the native home position. See the example below.\n\n- The current position must be within 2cm from 0 or an endstop.\n- The current position is set to the native home position.\n- Any previous position shift from [`G92`](/docs/gcode/G092.html) is cleared.\n- The home offset is persistent — added to the current position until changed.\n- Some uses include fine adjustment of Z position (without moving endstops) and shifting the coordinate space to print on a different part of the bed.\n",
    ),
    (
        codetype="M",
        identifier=(43, 0, nothing),
        funname="M43",
        doc="    M43(;params...)\nGet information about pins.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M043.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Digital Pin Number\n* W [Optional]: Watch pins\n* E [Optional]: Watch endstops\n* T [Optional]: Toggle pins - see [`M43 T`](/docs/gcode/M043-T.html) for options\n* S [Optional]: Test BLTouch type servo probes. Use `P` to specify servo index (0-3). Defaults to 0 if `P` omitted\n* I [Optional]: Ignore protection when reporting values\n\n\n# Description\n\nWhen setting up or debugging a machine it's useful to know how pins are assigned to functions by the firmware, and to be able to find pins for use with new functions. [`M43`](/docs/gcode/M043.html) provides these tools. [`M43`](/docs/gcode/M043.html) by itself reports all pin assignments. Use `P` to specify a single pin. Use `I` to report the values on pins that are protected. Use `W` to watch the specified pin, or all pins. Use the `E` option to monitor endstops. Use `S` option to test a BLTouch type servo probe. Use `T` option to toggle pins.\n\nThe `W` watch mode option continues looping, blocking all further commands, until the board is reset. If `EMERGENCY_PARSER` is enabled, [`M108`](/docs/gcode/M108.html) may also be used to exit the watch loop without needing to reset the board.\n\nSee [`M43 T`](/docs/gcode/M043-T.html) for Pins Debugging toggle options.\n",
    ),
    (
        codetype="M",
        identifier=(430, 0, nothing),
        funname="M430",
        doc="    M430(;params...)\nRead and display current (A), voltage (V), and power (W)\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M430.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: display current (A) on LCD\n* V [Optional]: toggle display voltage (V) on LCD\n* W [Optional]: display power/watts (W) on LCD\n\n\n# Description\nEnable/disable power monitor on LCD display. Report current/amps (A), voltage (V) and watts (W) if no parameters.\n\n",
    ),
    (
        codetype="M",
        identifier=(43, 0, "T"),
        funname="M43_T",
        doc="    M43 T(;params...)\nGet information about pins.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M043-T.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Start Pin number. If not given, will default to 0\n* L [Optional]: End Pin number. If not given, will default to last pin defined for this board\n* I [Optional]: Flag to ignore Marlin's pin protection. **Use with caution!!!!**\n* R [Optional]: Repeat pulses on each pin this number of times before continuing to next pin. If not given will default to 1.\n* W [Optional]: Wait time (in milliseconds) transitions. If not given will default to 500.\n\n\n# Description\n\nThe `M43 T` command toggles one or more pins.\n",
    ),
    (
        codetype="M",
        identifier=(48, 0, nothing),
        funname="M48",
        doc="    M48(;params...)\nMeasure Z Probe repeatability.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M048.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: Probe with temperature compensation enabled (`PTC_PROBE`, `PTC_BED`, `PTC_HOTEND`)\n* E [Optional]: Engage for each probe\n* L [Optional]: Number of legs to probe\n* P [Optional]: Number of probes to do\n* S [Optional]: Star/Schizoid probe. By default this will do 7 points. Override with `L`.\n* V [Optional]: Verbose Level (0-4, default=1)\n* X [Optional]: X Position\n* Y [Optional]: Y Position\n\n\n# Description\n\nProbes come in many flavors and as such have varying levels of accuracy, reliability, and repeatability, depending on several factors. This command tests the probe for repeatability (precision) and produces a standard deviation based on two or more probes of the same XY position.\n",
    ),
    (
        codetype="M",
        identifier=(486, 0, nothing),
        funname="M486",
        doc="    M486(;params...)\nIdentify and cancel objects\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M486.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: Cancel the current object.\n* P [Optional]: Cancel the object with the given index.\n* S [Optional]: Set the index of the current object. If the object with the given index has been canceled, this will cause the firmware to skip to the next object. The value -1 is used to indicate something that isn't an object and shouldn't be skipped.\n* T [Optional]: Reset the state and set the number of objects.\n* U [Optional]: Un-cancel the object with the given index. This command will be ignored if the object has already been skipped.\n\n\n# Description\n\nUse [`M486`](/docs/gcode/M486.html) to identify and cancel objects during a multi-object print job.\n\nThis command was originally developed for SD card printing but it works fine when host printing too. Of course, since hosts can skip objects more efficiently, host plugins are the better choice in that scenario.\n",
    ),
    (
        codetype="M",
        identifier=(493, 0, nothing),
        funname="M493",
        doc="    M493(;params...)\nEnable/disable and configure Fixed-Time Motion, Linear Advance, and Input Shaping\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M493.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Set the current motion mode and/or Input Shaper.\n* P [Optional]: Enable / disable Linear Advance.\n* K [Optional]: Set the gain for Linear Advance.\n* D [Optional]: Set the Dynamic Frequency mode.\n* A [Optional]: Set the Base Frequency for Input Shaping on the X axis.\n* B [Optional]: Set the Base Frequency for Input Shaping on the Y axis.\n* F [Optional]: Set the Frequency Scaling factor for Input Shaping on the X axis.\n* H [Optional]: Set the Frequency Scaling factor for Input Shaping on the Y axis.\n\n\n# Description\nThe Fixed-Time Motion Planner is an additional motion planning system provided by [Ulendo.io](//www.ulendo.io/) as an add-on to Marlin Firmware. It currently supports Cartesian and Core kinematics. It may be extended for Delta in the future. The `FT_MOTION` feature can be enabled at the same time as Marlin's integrated ZV Input Shaper, but these features do not share settings. It has its own implementation of Linear Advance (aka Pressure Advance) with its own gain parameter separate from [`M900`](/docs/gcode/M900.html).\n\nOne interesting feature of this add-on is that it can be enabled and disabled while the machine is running (and maybe even within a single print job). So if you prefer the integrated ZV Input Shaper for some prints and 2HEI Input Shaping for others you don't need to re-flash the firmware.\n\nG-code `M493` allows you to enable or disable Fixed-Time Motion, change the current Input Shaper mode, and set parameters for its own Linear Advance and Input Shaping.\n\n#### Input Shaper Tuning\nIt's not always easy to attach an accelerometer to most printer boards, so Marlin doesn't provide accelerator-based tuning. If you have that information you can use it. But the easiest way to tune Input Shaping is to print a ringing tower that goes through a range of frequencies, then examine the appearance of the ringing tower to choose the best frequencies for each axis.\n\n##### Get the Test Model\nDownload the [Ringing Tower STL](/assets/stl/ringing_tower.stl) which you will slice and use for the print test. For a CoreXY printer you should rotate the model 45 degrees, which isolates the A and B components of the motion system.\n\n##### Prepare the Slicer\nUse a slicer that provides custom G-code macros for layer change. For example you can open [Kiri:Moto](//grid.space/kiri/) or download [Prusa Slicer](//www.prusa3d.com/page/prusaslicer_424). If you use [Cura](//ultimaker.com/software/ultimaker-cura) you may need to install the Post Processing Plugin from the Cura Marketplace if it is not already installed.\n\n- In the the Starting G-code enable Fixed-Time Motion with something like:\n  ```\n  M493 S11 D0 ; Enable ZVD Input Shaping\n  ```\n\n- In *Kiri:Moto* enable **Infill > Fill Type > Vase**. Then add the following under **Setup > Machine > Gcode Macros > Layer** to run a test range of 15Hz to 60Hz:\n\n  ```\n  M493 A{(layer < 2 ? 0 : 15 + 45.0 * (layer - 2) / 297)} ; (Hz) X Input Shaping Test\n  M493 B{(layer < 2 ? 0 : 15 + 45.0 * (layer - 2) / 297)} ; (Hz) Y Input Shaping Test\n  ```\n\n- In *Prusa Slicer* you'll enable **Spiral vase**. Then add the following to your **Printer Settings > After layer change G-code** to run a test range of 15Hz to 60Hz:\n\n  ```\n  M493 A{(layer_num < 2 ? 0 : 15 + 45.0 * (layer_num - 2) / 297)} ; (Hz) X Input Shaping Test\n  M493 B{(layer_num < 2 ? 0 : 15 + 45.0 * (layer_num - 2) / 297)} ; (Hz) Y Input Shaping Test\n  ```\n\n- In *Cura*, you'll first need to add the .py file in [this repository](//www.github.com/dsdanielko/cura-ringing-tower-script/) to your Cura \"scripts\" folder. Reopen Cura, enable **Spiralize Outer Contour** and set **Minimum Layer Time** to 0. Then go to **Extensions > Post Processing > Modify G-Code**. Click **Add a script** in the window that opens and use the dropdown menu to find **Input Shaping**. Make sure the **Motion planning type** dropdown is set to **M493**. The default frequency settings will let you test a range of 15Hz to 60Hz.\n\n##### Slice and Print\nSlice and print the tower using 0.2mm layer height using the highest reasonable speed. When you examine the results it should be obvious where ringing is reduced the most on each axis. To get the Hz value for a given Z height, use the formula `15 + 45 * (z / 0.2 - 2) / 297`.\n\n##### Analyze the Result\nMeasure the height of the best looking layer, divide by the layer height, subtracting two layers. For example:\n- The least X ringing appears at height 20mm. So we calculate `15 + 45 * (20 / 0.2 - 2) / 297` and get a result of 29.84Hz.\n- Send the command `M493 A29.84` to apply the frequency to X motion. (For Y you would use `M493 B29.84`.)\n\n##### More Resources\nTH3D Studio has created an [Input Shaper Calculator](//www.th3dstudio.com/marlin-input-shaping-calculator/) that you can use to get the Slicer G-code you need and calculate the Hz value based on the best-looking layers.\n\n#### Dynamic Shaping\nOnce you have the basic Input Shaping tuned, you may want to do further testing to see how the resonance changes as the Z height increases. Z height can affect the machine resonance whether the bed or the gantry moves in Z due to changes in the center of mass. Tuning according to the changing Z-height is more complicated than just printing a test model, and is best done with an accelerometer. Machine vendors should consider tuning at the factory and provide tuned profile settings for the popular slicers.\n\n\nSee also [`M593`](@ref) and [`M900`](@ref).",
    ),
    (
        codetype="M",
        identifier=(5, 0, nothing),
        funname="M5",
        doc="    M5(;params...)\nTurn off spindle or laser\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M005.html).\n\n\n\n\n# Description\n\nWait for moves to complete, then turn off the spindle / laser power and PWM.\n\n\nSee also [`M3`](@ref) and [`M4`](@ref).",
    ),
    (
        codetype="M",
        identifier=(500, 0, nothing),
        funname="M500",
        doc="    M500(;params...)\nSave settings to EEPROM.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M500.html).\n\n\n\n\n# Description\n\nSave all configurable settings to EEPROM.\n",
    ),
    (
        codetype="M",
        identifier=(501, 0, nothing),
        funname="M501",
        doc="    M501(;params...)\nRestore settings from EEPROM.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M501.html).\n\n\n\n\n# Description\n\nLoad all saved settings from EEPROM.\n",
    ),
    (
        codetype="M",
        identifier=(502, 0, nothing),
        funname="M502",
        doc="    M502(;params...)\nRestore all settings to factory defaults.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M502.html).\n\n\n\n\n# Description\n\nReset all configurable settings to their factory defaults.\n\nTo also reset settings in EEPROM, follow with [`M500`](/docs/gcode/M500.html).\n",
    ),
    (
        codetype="M",
        identifier=(503, 0, nothing),
        funname="M503",
        doc="    M503(;params...)\nReport all settings that may be saved to EEPROM.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M503.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Detailed output flag. (`true` if omitted.)\n* C [Optional]: Save the embedded configuration ZIP file to the SD Card or Flash Drive.\n\n\n# Description\n\nPrint a concise report of all runtime-configurable settings (in SRAM) to the host console.\nThis command reports the active settings which may or may not be the same as those stored in the EEPROM.\n",
    ),
    (
        codetype="M",
        identifier=(504, 0, nothing),
        funname="M504",
        doc="    M504(;params...)\nValidate the contents of the EEPROM.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M504.html).\n\n\n\n\n# Description\n\nValidate the contents of the EEPROM.\n",
    ),
    (
        codetype="M",
        identifier=(510, 0, nothing),
        funname="M510",
        doc="    M510(;params...)\nLock the machine if it has a passcode\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M510.html).\n\n\n\n\n# Description\nLock the machine. When the machine is locked a passcode is required to unlock it. Use `M511 P` with your passcode to unlock the machine.option.\n\n\nSee also [`M511`](@ref) and [`M512`](@ref).",
    ),
    (
        codetype="M",
        identifier=(511, 0, nothing),
        funname="M511",
        doc="    M511(;params...)\nUnlock the machine if it has a passcode\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M511.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : The passcode to try.\n\n\n# Description\nCheck the given passcode and unlock the machine if it is correct. Otherwise, delay for a period of time before allowing another attempt.\n\n\nSee also [`M510`](@ref) and [`M512`](@ref).",
    ),
    (
        codetype="M",
        identifier=(512, 0, nothing),
        funname="M512",
        doc="    M512(;params...)\nSet a numeric passcode for locking the machine\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M512.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Current passcode. This must be correct to clear or change the passcode.\n* S [Optional]: If `S` is included the new passcode will be set to this value.\n\n\n# Description\nCheck the passcode given with `P` and if it is correct clear the passcode. If a new passcode is given with `S` then set a new passcode.\n\n\nSee also [`M510`](@ref) and [`M511`](@ref).",
    ),
    (
        codetype="M",
        identifier=(524, 0, nothing),
        funname="M524",
        doc="    M524(;params...)\nAbort an SD print started with [`M24`](/docs/gcode/M024.html)\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M524.html).\n\n\n\n\n# Description\n\nAbort an SD print in progress and turn off all heaters.\n",
    ),
    (
        codetype="M",
        identifier=(540, 0, nothing),
        funname="M540",
        doc="    M540(;params...)\nAbort SD printing when an endstop is triggered.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M540.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Whether (1) or not (0) to abort SD printing on endstop hit.\n\n\n# Description\n\nSet whether SD printing should abort in the event of any endstop being triggered. This provides a fast way to abort a print in the event of mechanical failure such as loose couplings, lost steps, diverted axes, binding, etc., which lead to axes being very far out of position.\n",
    ),
    (
        codetype="M",
        identifier=(569, 0, nothing),
        funname="M569",
        doc="    M569(;params...)\nToggle stealthChop\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M569.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Stepping mode for the X stepper\n* Y [Optional]: Stepping mode for the Y stepper\n* Z [Optional]: Stepping mode for the Z stepper\n* E [Optional]: Stepping mode for the E0 stepper\n* I [Optional]: Index for multiple steppers. Use `I1` for X2, Y2, and/or Z2, and `I2` for Z3.\n* T [Optional]: Index (tool) number for the E axis. If not specified, the E0 extruder.\n\n\n# Description\n\nToggle between stealthChop and spreadCycle on supporting TMC drivers.\n",
    ),
    (
        codetype="M",
        identifier=(575, 0, nothing),
        funname="M575",
        doc="    M575(;params...)\nChange the serial baud rate\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M575.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P [Optional]: Serial Port index. Omit for all serial ports.\n* B : The baud rate to set. Permitted values are:\n  - 2400 (24)\n  - 9600 (96)\n  - 19200 (19, 192)\n  - 38400 (38, 384)\n  - 57600 (57, 576)\n  - 115200 (115, 1152)\n  - 250000 (250)\n  - 500000 (500)\n  - 1000000\n\n\n\n# Description\n\nChange the baud rate of one serial port or all serial ports. This command will interrupt serial communication to the host and may reset the firmware when the host reconnects at the new baud rate.\n",
    ),
    (
        codetype="M",
        identifier=(593, 0, nothing),
        funname="M593",
        doc="    M593(;params...)\nGet or set Input Shaping parameters\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M593.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* D [Optional]: Set the zeta/damping factor for the specified axes. If `X` and `Y` are omitted, both will be set.\n* F [Optional]: Set the damping frequency for the specified axes. If `X` and `Y` are omitted, both will be set.\n* X [Optional]: Flag to set the X axis value. If `X` and `Y` are omitted, both will be set.\n* Y [Optional]: Flag to set the Y axis value. If `X` and `Y` are omitted, both will be set.\n\n\n# Description\n{% alert info %}This G-code pertains to Marlin's integrated ZV Input Shaper. For the Fixed-Time Motion Planner Input Shaper see [`M493`](/docs/gcode/M493.html).{% endalert %}\n\nSet the Input Shaping damping factor and/or frequency (in Hertz) for axes that support it. Use `M593` with no parameters to report the current settings.\n\n#### Input Shaper Tuning\nIt's not always easy to attach an accelerometer to most printer boards, so Marlin doesn't provide accelerator-based tuning. If you have that information you can use it. But the easiest way to tune Input Shaping is to print a ringing tower that goes through a range of frequencies, then examine the appearance of the ringing tower to choose the best frequencies for each axis.\n\n##### Get the Test Model\nDownload the [Ringing Tower STL](/assets/stl/ringing_tower.stl) which you will slice and use for the print test. For a CoreXY printer you should rotate the model 45 degrees, which isolates the A and B components of the motion system.\n\n##### Prepare the Slicer\nUse a slicer that provides custom G-code macros for layer change. For example you can open [Kiri:Moto](//grid.space/kiri/) or download [Prusa Slicer](//www.prusa3d.com/page/prusaslicer_424). If you use [Cura](//ultimaker.com/software/ultimaker-cura) you may need to install the Post Processing Plugin from the Cura Marketplace if it is not already installed.\n\n- In *Kiri:Moto* enable **Infill > Fill Type > Vase**. Then add the following under **Setup > Machine > Gcode Macros > Layer** to run a test range of 15Hz to 60Hz:\n  ```\n  M593 F{(layer < 2 ? 0 : 15 + 45.0 * (layer - 2) / 297)} ; Hz Input Shaping Test\n  ```\n\n- In *Prusa Slicer* you'll enable **Spiral vase**. Then add the following to your **Printer Settings > After layer change G-code** to run a test range of 15Hz to 60Hz:\n  ```\n  M593 F{(layer_num < 2 ? 0 : 15 + 45.0 * (layer_num - 2) / 297)} ; Hz Input Shaping Test\n  ```\n\n- In *Cura*, you'll first need to add the .py file in [this repository](//www.github.com/dsdanielko/cura-ringing-tower-script/) to your Cura \"scripts\" folder. Reopen Cura, enable **Spiralize Outer Contour** and set **Minimum Layer Time** to 0. Then go to **Extensions > Post Processing > Modify G-Code**. Click **Add a script** in the window that opens and use the dropdown menu to find **Input Shaping**. Make sure the **Motion planning type** dropdown is set to **M593**. The default frequency settings will let you test a range of 15Hz to 60Hz.\n\n##### Slice and Print\nSlice and print the tower using 0.2mm layer height using the highest reasonable speed. When you examine the results it should be obvious where ringing is reduced the most on each axis. To get the Hz value for a given Z height, use the formula `15 + 45 * (z / 0.2 - 2) / 297`.\n\n##### Analyze the Result\nMeasure the height of the best looking layer, divide by the layer height, subtracting two layers. For example:\n- The least X ringing appears at height 20mm. So we calculate `15 + 45 * (20 / 0.2 - 2) / 297` and get a result of 29.84Hz.\n- Set this value with `M593 X F29.84` then save with `M500` and it will apply to all motion from now on.\n\n#### More Resources\nTH3D Studio has created an [Input Shaper Calculator](//www.th3dstudio.com/marlin-input-shaping-calculator/) that you can use to get the Slicer G-code you need and calculate the Hz value based on the best-looking layers.\n\n\nSee also [`M493`](@ref).",
    ),
    (
        codetype="M",
        identifier=(600, 0, nothing),
        funname="M600",
        doc="    M600(;params...)\nAutomatically change filament\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M600.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* T [Optional]: Target extruder\n* E [Optional]: Retract before moving to change position (negative, default `PAUSE_PARK_RETRACT_LENGTH`)\n* U [Optional]: Amount of retraction for unload (negative)\n* L [Optional]: Load length, longer for bowden (negative)\n* X [Optional]: X position for filament change\n* Y [Optional]: Y position for filament change\n* Z [Optional]: Z relative lift for filament change position\n* B [Optional]: Number of beeps to alert user of filament change (default `FILAMENT_CHANGE_ALERT_BEEPS`)\n* R [Optional]: Resume temperature. (AUTOTEMP: the min auto-temperature.)\n\n\n# Description\n\nThe [`M600`](/docs/gcode/M600.html) command initiates the filament change procedure. The basic procedure will move the print head away from the print, eject the filament, wait for new filament to be inserted and the user to confirm, load and prime the filament, and continue with the print. [`M600`](/docs/gcode/M600.html) may be initiated automatically if a filament runout sensor is installed.\n",
    ),
    (
        codetype="M",
        identifier=(603, 0, nothing),
        funname="M603",
        doc="    M603(;params...)\nConfigure automatic filament change parameters\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M603.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* T [Optional]: Target extruder\n* U [Optional]: Amount of retraction for unload (negative)\n* L [Optional]: Load length, longer for bowden (negative)\n\n\n# Description\n\nThe [`M603`](/docs/gcode/M603.html) command configures automatic filament change parameters.\n",
    ),
    (
        codetype="M",
        identifier=(605, 0, nothing),
        funname="M605",
        doc="    M605(;params...)\nSet the behavior mode for a multiple nozzle setup\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M605.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Select the pin to set for all specified axes.\n* X [Optional]: X distance between dual X carriages.  (Requires `DUAL_X_CARRIAGE`)\n* R [Optional]: Temperature difference to apply to E1.  (Requires `DUAL_X_CARRIAGE`)\n* P [Optional]: Bit-mask of nozzles to include in the duplication set. 0 disables duplication. Bit 1 is E0, Bit 2 is E1 ... Bit n is E(n-1). (Requires `MULTI_NOZZLE_DUPLICATION`)\n* E [Optional]: Last nozzle index to include in the duplication set. 0 disables duplication. (Requires `MULTI_NOZZLE_DUPLICATION`)\n\n\n# Description\nSet the behavior mode for multiple fixed nozzles such as a Dual Extruder or `DUAL_X_CARRIAGE` machine.\n\nThis command behaves differently for `DUAL_X_CARRIAGE` vs. `MULTI_NOZZLE_DUPLICATION`:\n- For `MULTI_NOZZLE_DUPLICATION` the `S2` parameter enables duplication mode. Any other value disables it.\n- For `DUAL_X_CARRIAGE`, this command sets the Dual X mode. See the description of `S` below.\n- For Mirrored Mode: `M605 S2 R0 X<distance>` and `M605 S3`.\n",
    ),
    (
        codetype="M",
        identifier=(665, 0, nothing),
        funname="M665",
        doc="    M665(;params...)\nSet delta geometry values\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M665.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* H [Optional]: Delta height\n* L [Optional]: Diagonal rod\n* R [Optional]: Delta radius\n* S [Optional]: Segments per second\n* X [Optional]: Alpha (Tower 1) angle trim\n* Y [Optional]: Beta (Tower 2) angle trim\n* Z [Optional]: Gamma (Tower 3) angle trim\n* A [Optional]: Alpha (Tower 1) diagonal rod trim\n* B [Optional]: Beta  (Tower 2) diagonal rod trim\n* C [Optional]: Gamma (Tower 3) diagonal rod trim\n\n\n# Description\n\nDelta machines are very fast and accurate when tuned. The first key is to make sure all your dimensions are set correctly. Even small errors in these values can lead to curved movements and failed prints. To ensure the best delta experience, use this command in conjunction with [`G33`](/docs/gcode/G033.html) to get these dimensions set perfectly before beginning to print.\n",
    ),
    (
        codetype="M",
        identifier=(666, 0, nothing),
        funname="M666",
        doc="    M666(;params...)\nSet Delta endstop adjustments\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M666.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Adjustment for the X actuator endstop\n* Y [Optional]: Adjustment for the Y actuator endstop\n* Z [Optional]: Adjustment for the Z actuator endstop\n\n\n# Description\n\nUse the [`M666`](/docs/gcode/M666.html) command to adjust the endstop offsets on a Delta printer.\n",
    ),
    (
        codetype="M",
        identifier=(672, 0, nothing),
        funname="M672",
        doc="    M672(;params...)\nSet Duet Smart Effector sensitivity\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M672.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Set sensitivity (0-255)\n* R [Optional]: Revert sensitivity to factory settings\n\n\n# Description\n\nSet or reset Duet Smart Effector sensitivity.\n",
    ),
    (
        codetype="M",
        identifier=(7, 0, nothing),
        funname="M7",
        doc="    M7(;params...)\nTurn mist or flood coolant on / off\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M007-M009.html).\n\n\n\n\n# Description\n\nThis command pertains to a CNC machine with a liquid cooling system or a laser with air assist.\n",
    ),
    (
        codetype="M",
        identifier=(701, 0, nothing),
        funname="M701",
        doc="    M701(;params...)\nLoad filament\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M701.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* T [Optional]: Optional extruder index. Current extruder if omitted.\n* Z [Optional]: Move the Z axis by this distance\n* L : Extrude distance for insertion (positive value) (manual reload)\n\n\n# Description\n\nLoad filament into the active extruder. By default this will use the configured `ADVANCED_PAUSE_FEATURE` settings.\n",
    ),
    (
        codetype="M",
        identifier=(702, 0, nothing),
        funname="M702",
        doc="    M702(;params...)\nUnload filament\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M702.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* T [Optional]: Optional extruder number. If omitted, current extruder (or ALL extruders with [`FILAMENT_UNLOAD_ALL_EXTRUDERS`](/docs/configuration/configuration.html#advanced-pause)).\n* Z [Optional]: Move the Z axis by this distance\n* U : Retract distance for removal (manual reload)\n\n\n# Description\n\nUnload filament. By default this command will use the configured `ADVANCED_PAUSE_FEATURE` settings.\n",
    ),
    (
        codetype="M",
        identifier=(710, 0, nothing),
        funname="M710",
        doc="    M710(;params...)\nSet or report controller fan settings\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M710.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Set the speed of the controller fan when motors are active.\n* I [Optional]: Set the speed of the controller fan when motors are off.\n* A [Optional]: Set whether the fan speed is set automatically. When turned off the controller fan speed will remain where it is.\n* R [Optional]: Reset all settings to defaults. Other parameters can be included to override.\n* D [Optional]: Set the extra duration to keep the fan speed high after motors are turned off.\n\n\n# Description\n\nSet one or more Controller Fan options. Without any parameters report the current settings.\n",
    ),
    (
        codetype="M",
        identifier=(7219, 0, nothing),
        funname="M7219",
        doc="    M7219(;params...)\nControl Max7219 Segmented LEDs\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M7219.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* C [Optional]: Set the column specified by `C` to bit pattern `V`.\n* D [Optional]: Directly set a Max7219 native row (on the unit specified by `U`) to the 8-bit pattern `V`.\n* R [Optional]: Set the row specified by `R` to bit pattern `V`.\n* I [Optional]: Initialize (clear) all matrixes.\n* F [Optional]: Fill the matrix by turning on all LEDs.\n* P [Optional]: Print the LED array state for debugging.\n* U [Optional]: Used with `D` to specify which matrix unit to set.\n* V [Optional]: Value to apply when using the `C`, `R`, or `X`/`Y` parameters.\n* X [Optional]: Set a matrix LED at the given `X` position to the `V` value. If no `V` is given, toggle the LED state.\n* Y [Optional]: Set a matrix LED at the given `Y` position to the `V` value. If no `V` is given, toggle the LED state.\n\n\n# Description\n\nSet the state of one or more Max7219 matrix displays or 7-segment digital displays.\n",
    ),
    (
        codetype="M",
        identifier=(73, 0, nothing),
        funname="M73",
        doc="    M73(;params...)\nSet current print progress percentage for LCD.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M073.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Current print progress percentage\n* R [Optional]: Set remaining time.\n\n\n# Description\n\nSet current print progress percentage and/or remaining time for display on the LCD.\n",
    ),
    (
        codetype="M",
        identifier=(75, 0, nothing),
        funname="M75",
        doc="    M75(;params...)\nStart the print job timer.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M075.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: A string to display in the LCD heading. (Requires `DWIN_CREALITY_LCD_ENHANCED`)\n\n\n# Description\n\nStart the print job timer.\n",
    ),
    (
        codetype="M",
        identifier=(76, 0, nothing),
        funname="M76",
        doc="    M76(;params...)\nPause the print job timer.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M076.html).\n\n\n\n\n# Description\n\nPause the print job timer.\n",
    ),
    (
        codetype="M",
        identifier=(77, 0, nothing),
        funname="M77",
        doc="    M77(;params...)\nStop the print job timer.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M077.html).\n\n\n\n\n# Description\n\nStop the print job timer.\n",
    ),
    (
        codetype="M",
        identifier=(78, 0, nothing),
        funname="M78",
        doc="    M78(;params...)\nPrint statistics about print jobs.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M078.html).\n\n\n\n\n# Description\n",
    ),
    (
        codetype="M",
        identifier=(8, 0, nothing),
        funname="M8",
        doc="    M8(;params...)\nTurn mist or flood coolant on / off\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M007-M009.html).\n\n\n\n\n# Description\n\nThis command pertains to a CNC machine with a liquid cooling system or a laser with air assist.\n",
    ),
    (
        codetype="M",
        identifier=(80, 0, nothing),
        funname="M80",
        doc="    M80(;params...)\nTurn on the power supply\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M080.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Report Power Supply state\n\n\n# Description\n\nTurn on the high-voltage power supply. Requires a board that's powered from USB or another 5V source.\n\n\nSee also [`M81`](@ref).",
    ),
    (
        codetype="M",
        identifier=(808, 0, nothing),
        funname="M808",
        doc="    M808(;params...)\nSet or go to a marker for looping G-code\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M808.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* L [Optional]: Loop counter. Use `L` or `L0` for an infinite loop.\n\n\n# Description\n\nThe Repeat Marker command is used to define regions of a G-code file that will be repeated during SD printing. A marker is first set with `M808 L[count]`, and later in the file a plain `M808` command is used count down and loop. (By default up to 10 start markers can be nested.)\n\nIn slicer software put `M808 L` to the \"**Start G-code**\" and `M808` to the \"**End G-code**.\" But this command is not the only requirement. Before starting each whole object it's important to actually clear the print area of obstacles and to reset the coordinate system with `G92` or `G28`, so this command is best used with belt printers or other systems with automatic print removal.\n",
    ),
    (
        codetype="M",
        identifier=(81, 0, nothing),
        funname="M81",
        doc="    M81(;params...)\nTurn off the power supply.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M081.html).\n\n\n\n\n# Description\n\nTurn off the high-voltage power supply. If the board is not powered from another source, this may also shut down the electronics.\n\n\nSee also [`M80`](@ref).",
    ),
    (
        codetype="M",
        identifier=(810, 0, nothing),
        funname="M810",
        doc="    M810(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(811, 0, nothing),
        funname="M811",
        doc="    M811(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(812, 0, nothing),
        funname="M812",
        doc="    M812(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(813, 0, nothing),
        funname="M813",
        doc="    M813(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(814, 0, nothing),
        funname="M814",
        doc="    M814(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(815, 0, nothing),
        funname="M815",
        doc="    M815(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(816, 0, nothing),
        funname="M816",
        doc="    M816(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(817, 0, nothing),
        funname="M817",
        doc="    M817(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(818, 0, nothing),
        funname="M818",
        doc="    M818(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(819, 0, nothing),
        funname="M819",
        doc="    M819(;params...)\nSet/execute one of ten G-code macros\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M810-M819.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* string [Optional]: Set Macro to the given commands, separated by the pipe character.\n\n\n# Description\n\nUse the `M810`-`M819` commands to set and execute 10 distinct G-code \"macros.\" Put anything after the command to define its macro. To run the macro just send `M810`-`M819` by itself. Multiple commands in one macro are separated by the pipe character ('`|`').\n",
    ),
    (
        codetype="M",
        identifier=(82, 0, nothing),
        funname="M82",
        doc="    M82(;params...)\nSet E to absolute positioning.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M082.html).\n\n\n\n\n# Description\n\nThis command is used to override [`G91`](/docs/gcode/G091.html) and put the E axis into absolute mode independent of the other axes.\n",
    ),
    (
        codetype="M",
        identifier=(83, 0, nothing),
        funname="M83",
        doc="    M83(;params...)\nSet E to relative positioning.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M083.html).\n\n\n\n\n# Description\n\nThis command is used to override [`G90`](/docs/gcode/G090.html) and put the E axis into relative mode independent of the other axes.\n",
    ),
    (
        codetype="M",
        identifier=(84, 0, nothing),
        funname="M84",
        doc="    M84(;params...)\nDisable steppers (same as M84).\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M018.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Inactivity Timeout. If none specified, disable now.\n* X [Optional]: X Disable\n* Y [Optional]: Y Disable\n* Z [Optional]: Z Disable\n* E [Optional]: E Disable\n\n\n# Description\n\nThis command can be used to set the stepper inactivity timeout (`S`) or to disable one or more steppers (`X`,`Y`,`Z`,`E`).\n\nIf a timeout is given with `S`, this command just sets the stepper inactivity timeout.\n\nIf no steppers are specified, this command disables all steppers immediately.\n\nIf one or more axes are specified, this command disables the specified steppers immediately.\n",
    ),
    (
        codetype="M",
        identifier=(85, 0, nothing),
        funname="M85",
        doc="    M85(;params...)\nSet the inactivity timeout.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M085.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Max inactive seconds\n\n\n# Description\n\nUse this command to set a maximum period of time for the machine to be inactive (with no moves). If the machine is idle for longer than the set period, the firmware will shut everything down and halt the machine.\n",
    ),
    (
        codetype="M",
        identifier=(851, 0, nothing),
        funname="M851",
        doc="    M851(;params...)\nSet the Z probe XYZ offset from nozzle\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M851.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: Z probe X offset\n* Y [Optional]: Z probe Y offset\n* Z [Optional]: Z probe Z offset\n\n\n# Description\n\nSet the XYZ distance from the nozzle to the probe trigger-point.\n\nThe easiest way to get the Z offset value is to:\n  - Home the Z axis.\n  - Raise Z and deploy the probe.\n  - Move Z down slowly until the probe triggers.\n  - Take the current Z value and negate it. (`5.2` => `-5.2`)\n  - Set with `M851 Z-5.2` and `#define Z_PROBE_OFFSET_FROM_EXTRUDER -5.2`.\n\nFor X and Y you have to measure the distance.\n",
    ),
    (
        codetype="M",
        identifier=(852, 0, nothing),
        funname="M852",
        doc="    M852(;params...)\nMisalignment in the XYZ axes.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M852.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Skew correction factor for XY axis.\n* J [Optional]: Skew correction factor for XZ axis\n* K [Optional]: Skew correction factor for YZ axis\n* S [Optional]: Alias for `I` when only XY skew correction is enabled\n\n\n# Description\n\nBed Skew Compensation corrects for misalignment in the XY, XZ, and ZY axes through the use of correction factors.\n",
    ),
    (
        codetype="M",
        identifier=(86, 0, nothing),
        funname="M86",
        doc="    M86(;params...)\nSet the hotend idle timeout.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M086.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Timeout period. Temperatures are reduced if the machine is idle for this period.\n* T [Optional]: Temperature trigger. Timeout only applies above this temperature.\n* E [Optional]: Extruder idle temperature. The hotend is set to this temperature on timeout.\n* B [Optional]: Bed idle temperature. The bed is set to this temperature on timeout. (Requires a heated bed.)\n\n\n# Description\n\nUse this command to set a maximum period of time for the machine to be idle with heaters on. If the extruder temperature is above the trigger value and the machine is idle for longer than the set period, the firmware will set the temperature of all hotends and the heated bed to the configured temperatures.\n\nSend `M86` with no parameters to report the current settings.\n\n\nSee also [`M87`](@ref).",
    ),
    (
        codetype="M",
        identifier=(860, 0, nothing),
        funname="M860",
        doc="    M860(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(861, 0, nothing),
        funname="M861",
        doc="    M861(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(862, 0, nothing),
        funname="M862",
        doc="    M862(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(863, 0, nothing),
        funname="M863",
        doc="    M863(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(864, 0, nothing),
        funname="M864",
        doc="    M864(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(865, 0, nothing),
        funname="M865",
        doc="    M865(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(866, 0, nothing),
        funname="M866",
        doc="    M866(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(867, 0, nothing),
        funname="M867",
        doc="    M867(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(868, 0, nothing),
        funname="M868",
        doc="    M868(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(869, 0, nothing),
        funname="M869",
        doc="    M869(;params...)\nI2C position encoders for closed loop control\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M860-M869.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Module index.  [0, I2CPE_ENCODER_CNT - 1]\n* O [Optional]: Include homed zero-offset in returned position\n* X [Optional]: Report on X axis encoder if present. (If A or I not specified)\n* Y [Optional]: Report on Y axis encoder if present. (If A or I not specified)\n* Z [Optional]: Report on Z axis encoder if present. (If A or I not specified)\n* E [Optional]: Report on E axis encoder if present. (If A or I not specified)\n* U [Optional]: Units in mm or raw step count. (for M860 only)\n* P [Optional]: Number of rePeats/iterations. (for M863 only)\n* S [Optional]: Module new I2C address. [30, 200]. (for M864 only)\n* R [Optional]: Reset error counter. (for M866 only)\n* S [Optional]: Enable/disable error correction. 1 enables, 0 disables.  If not supplied, toggle. (for M867 only)\n* T [Optional]: New error correction threshold. (for M868 only)\n\n\n# Description\n- M860 - Report the position(s) of position encoder module(s).\n- M861 - Report the status of position encoder modules.\n- M862 - Perform an axis continuity test for position encoder modules.\n- M863 - Perform steps-per-mm calibration for position encoder modules.\n- M864 - Change position encoder module I2C address.\n- M865 - Check position encoder module firmware version.\n- M866 - Report or reset position encoder module error count.\n- M867 - Enable/disable or toggle error correction for position encoder modules.\n- M868 - Report or set position encoder module error correction threshold.\n- M869 - Report position encoder module error.\n\nI2C position encoders for closed loop control. Developed by Chris Barr at Aus3D.\n[Wiki: https://wiki.aus3d.com.au/Magnetic_Encoder](//wiki.aus3d.com.au/Magnetic_Encoder)\n[Github: https://github.com/Aus3D/MagneticEncoder](//github.com/Aus3D/MagneticEncoder)\n",
    ),
    (
        codetype="M",
        identifier=(87, 0, nothing),
        funname="M87",
        doc="    M87(;params...)\nDisable the hotend idle timeout.\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M087.html).\n\n\n\n\n# Description\n\nUse this command to disable the Hotend Idle Timer. Equivalent to `M86 S0`.\n\n\nSee also [`M86`](@ref).",
    ),
    (
        codetype="M",
        identifier=(871, 0, nothing),
        funname="M871",
        doc="    M871(;params...)\nConfigure probe temperature compensation\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M871.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* V [Optional]: Z adjustment value, in micrometers.\n* I [Optional]: Index at which to store the given Z adjustment value.\n* B [Optional]: Store the value `V` as the Z adjustment at index `I` for the Bed.\n* P [Optional]: Store the value `V` as the Z adjustment at index `I` for the Probe.\n* E [Optional]: Store the value `V` as the Z adjustment at index `I` for the Extruder.\n* R [Optional]: Reset all Z adjustment values to factory defaults (zero).\n\n\n# Description\n\nRead/write probe temperature compensation values. Values for bed and/or probe can be calibrated using the [`G76`](/docs/gcode/G076.html) command.\n\n\nSee also [`G76`](@ref) and [`M192`](@ref).",
    ),
    (
        codetype="M",
        identifier=(876, 0, nothing),
        funname="M876",
        doc="    M876(;params...)\nHandle Host prompt responses\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M876.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Response to prompt\n\n\n# Description\nHandle responses from the host, such as:\n  - Filament runout responses: Purge More, Continue\n  - General \"Continue\" response\n  - Resume Print response\n  - Dismissal of info\n",
    ),
    (
        codetype="M",
        identifier=(9, 0, nothing),
        funname="M9",
        doc="    M9(;params...)\nTurn mist or flood coolant on / off\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M007-M009.html).\n\n\n\n\n# Description\n\nThis command pertains to a CNC machine with a liquid cooling system or a laser with air assist.\n",
    ),
    (
        codetype="M",
        identifier=(900, 0, nothing),
        funname="M900",
        doc="    M900(;params...)\nGet and set Linear Advance K value\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M900.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* K [Optional]: The K factor to set for the specified extruder. Unchanged if omitted. Set this value higher for more flexible filament or a longer filament path.\n\nWith `EXTRA_LIN_ADVANCE_K` this sets the *primary* K factor. Note that this factor may be inactive and won't take effect until the next `M900 S0`.\n\n* L [Optional]: Set the second K factor for the specified extruder. Requires `EXTRA_LIN_ADVANCE_K`. Note that this factor may be inactive and won't take effect until the next `M900 S1`.\n* S [Optional]: Select slot and activate the last stored value. Requires `EXTRA_LIN_ADVANCE_K`.\n* T [Optional]: Extruder to which `K`, `L`, and `S` will apply. Requires `EXTRA_LIN_ADVANCE_K`.\n\n\n# Description\n\nThis command sets and/or reports the Linear Advance K factors.\n\nSetting the K factor to 0 disables Linear Advance.\n\nWith the `EXTRA_LIN_ADVANCE_K` option Marlin maintains two slots for each extruder. The first slot is set with `K` and the second slot is set with `L`, then select the first using `S0` and the second using `S1`.\n",
    ),
    (
        codetype="M",
        identifier=(906, 0, nothing),
        funname="M906",
        doc="    M906(;params...)\nSet the motor current (in milliamps)\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M906.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* E [Optional]: Current for the E0 stepper\n* I : Index for multiple steppers. (i.e., `I1` for X2, Y2, Z2; `I2` for Z3; `I3` for Z4).\n* T [Optional]: Index (tool) number for the E axis. If not specified, the E0 extruder.\n* X [Optional]: Current for the X stepper\n* Y [Optional]: Current for the Y stepper\n* Z [Optional]: Current for the Z stepper\n\n\n# Description\n\nSet stepper motor currents in milliamps units.\n",
    ),
    (
        codetype="M",
        identifier=(907, 0, nothing),
        funname="M907",
        doc="    M907(;params...)\nSet motor current via digital trimpot\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M907.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* B [Optional]: Current for the E1 stepper (Requires `DIGIPOTSS_PIN` or `DIGIPOT_I2C`)\n* C [Optional]: Current for the E2 stepper (Requires `DIGIPOT_I2C`)\n* D [Optional]: Current for the E3 stepper (Requires `DIGIPOT_I2C`)\n* E [Optional]: Current for the E0 stepper\n* S [Optional]: Set this current on all steppers (Requires `DIGIPOTSS_PIN` or `DAC_STEPPER_CURRENT`)\n* X [Optional]: Current for the X stepper (and the Y stepper with `MOTOR_CURRENT_PWM_XY`)\n* Y [Optional]: Current for the Y stepper (Use `X` with `MOTOR_CURRENT_PWM_XY`)\n* Z [Optional]: Current for the Z stepper\n\n\n# Description\n\nSet digital trimpot motor current using axis codes `X`, `Y`, `Z`, `E`, plus `B` and `S`. The unit used for current depends on the type of stepper driver.\n",
    ),
    (
        codetype="M",
        identifier=(908, 0, nothing),
        funname="M908",
        doc="    M908(;params...)\nSet a digital trimpot directly\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M908.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* P : Pin (i.e., Address, Channel)\n* S : Current value\n\n\n# Description\n\nSet the digital trimpot current directly by address/channel/pin index. `DAC_STEPPER_CURRENT` pertains to the MCP4728.\n",
    ),
    (
        codetype="M",
        identifier=(909, 0, nothing),
        funname="M909",
        doc="    M909(;params...)\nReport DAC current values to host\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M909.html).\n\n\n\n\n# Description\n\nPrint the DAC stepper current values in the format \"`% (Amps)`\".\n",
    ),
    (
        codetype="M",
        identifier=(910, 0, nothing),
        funname="M910",
        doc="    M910(;params...)\nCommit digipot/DAC value to external EEPROM\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M910.html).\n\n\n\n\n# Description\n\nCommit digipot/DAC value to external EEPROM via I2C.\n",
    ),
    (
        codetype="M",
        identifier=(911, 0, nothing),
        funname="M911",
        doc="    M911(;params...)\nDriver overtemperature pre-warn condition\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M911.html).\n\n\n\n\n# Description\n\nReport the TMC stepper driver overtemperature pre-warn condition to the host.\n",
    ),
    (
        codetype="M",
        identifier=(912, 0, nothing),
        funname="M912",
        doc="    M912(;params...)\nClear overtemperature pre-warn condition flag\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M912.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Stepper number to set. If omitted, all specified axes.\n* X [Optional]: Clear `X` and/or `X2` stepper driver Over Temperature Pre-warn flag.\n* Y [Optional]: Clear `Y` and/or `Y2` stepper driver Over Temperature Pre-warn flag.\n* Z [Optional]: Clear `Z` and/or `Z2`  and/or `Z3` stepper driver Over Temperature Pre-warn flag.\n* E [Optional]: Clear all or one `E` stepper driver Over Temperature Pre-warn flag.\n\n\n# Description\n\nClear the stepper driver overtemperature pre-warn condition flag.\n",
    ),
    (
        codetype="M",
        identifier=(913, 0, nothing),
        funname="M913",
        doc="    M913(;params...)\nTMC driver switching to spreadCycle\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M913.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Index for multiple steppers. (i.e., `I1` for X2, Y2, Z2; `I2` for Z3; `I3` for Z4).\n* T [Optional]: Index (tool) number for the E axis. If not specified, the E0 extruder.\n* X [Optional]: Set Hybrid Threshold for X to the given value.\n* Y [Optional]: Set Hybrid Threshold for Y to the given value.\n* Z [Optional]: Set Hybrid Threshold for Z to the given value.\n* E [Optional]: Set Hybrid Threshold for E to the given value.\n\n\n# Description\n\nWhen `HYBRID_THRESHOLD` is enabled, the TMC driver is switched from the quieter StealthChop to spreadCycle when the feed rate for a given stepper motor is over its `_HYBRID_THRESHOLD`.\n",
    ),
    (
        codetype="M",
        identifier=(914, 0, nothing),
        funname="M914",
        doc="    M914(;params...)\nSet sensorless homing sensitivity\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M914.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* I [Optional]: Index for multiple steppers. (i.e., `I1` for X2, Y2, Z2; `I2` for Z3; `I3` for Z4).\n* X [Optional]: Sensitivity of the X stepper driver.\n* Y [Optional]: Sensitivity of the Y stepper driver.\n* Z [Optional]: Sensitivity of the Z stepper driver.\n\n\n# Description\n\nSome TMC stepper drivers can detect when they bump into something that causes them to stop moving. This feature is so sensitive that it can actually take the place of traditional endstops. Use this command to set the bump sensitivity for the X, Y, and Z stepper drivers.\n",
    ),
    (
        codetype="M",
        identifier=(915, 0, nothing),
        funname="M915",
        doc="    M915(;params...)\nAlign ends of the Z axis and test torque\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M915.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S [Optional]: Current value to use for the raise move. (Default: `CALIBRATION_CURRENT`)\n* Z [Optional]: Extra distance past `Z_MAX_POS` to move the Z axis. (Default: `CALIBRATION_EXTRA_HEIGHT`)\n\n\n# Description\n\nThe command aims to align the ends of the X gantry (for a Průša i3-style printer). See the [video demonstration](//youtu.be/JqH41K2vq0g?t=300) below.\n\nUsing the given current, Marlin will move the Z axis (at homing speed) to the top plus a given extra distance. _Since this intentionally stalls the Z steppers, you should use the minimum current required to move the axis._\n\nZ is then re-homed to correct the position.\n",
    ),
    (
        codetype="M",
        identifier=(916, 0, nothing),
        funname="M916",
        doc="    M916(;params...)\nFind L6474 drive level (KVAL_HOLD) threshold\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M916.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* J [Optional]: Select which driver(s) to monitor on multi-driver axis\n* X [Optional]: Monitor X with the given displacement (1 - 255mm) on either side of the current position.\n* Y [Optional]: Monitor Y with the given displacement (1 - 255mm) on either side of the current position.\n* Z [Optional]: Monitor Z with the given displacement (1 - 255mm) on either side of the current position.\n* E [Optional]: Monitor E with the given displacement (1 - 255mm) on either side of the current position.\n* F [Optional]: Feedrate for the moves. (Default max feedrate if unspecified.)\n* T [Optional]: Current (mA) setting for TVAL (0 - 4A in 31.25mA increments, rounds down) - L6474 only. If unspecified, report current value from driver.\n* K [Optional]: Value for KVAL_HOLD (0 - 255) (ignored for L6474). If unspecified, report current value from driver.\n* D [Optional]: Time (in seconds) to run each setting of KVAL_HOLD/TVAL. (Default zero, to run each setting once.)\n\n\n# Description\n\n`M916`: increase KVAL_HOLD until thermal warning.\nThis routine is also useful for determining the approximate KVAL_HOLD where the stepper stops losing steps. The sound will get noticeably quieter as it stops losing steps.\n\n\nSee also [`M917`](@ref) and [`M918`](@ref).",
    ),
    (
        codetype="M",
        identifier=(917, 0, nothing),
        funname="M917",
        doc="    M917(;params...)\nFind L6474 minimum current thresholds\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M917.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* J [Optional]: Select which driver(s) to monitor on multi-driver axis.\n* X [Optional]: Monitor X with the given displacement (1 - 255mm) on either side of the current position.\n* Y [Optional]: Monitor Y with the given displacement (1 - 255mm) on either side of the current position.\n* Z [Optional]: Monitor Z with the given displacement (1 - 255mm) on either side of the current position.\n* E [Optional]: Monitor E with the given displacement (1 - 255mm) on either side of the current position.\n* F [Optional]: Feedrate for the moves. If unspecified, uses the max feedrate.\n* I [Optional]: Starting overcurrent threshold. Report current value from driver if not specified. If there are multiple drivers on the axis then all will be set the same.\n* T [Optional]: Current (mA) setting for TVAL (0 - 4A in 31.25mA increments, rounds down) - L6474 only. Report current value from driver if not specified.\n* K [Optional]: Value for KVAL_HOLD (0 - 255) (ignored for L6474). Report current value from driver if not specified\n\n\n# Description\n\nThe `M917` command runs a test procedure to find the minimum stepper current thresholds.\n- Decrease OCD current until overcurrent error\n- Increase OCD until overcurrent error goes away\n- Decrease stall threshold until stall (not done on L6474)\n- Increase stall until stall error goes away (not done on L6474)\n\n\nSee also [`M916`](@ref) and [`M918`](@ref).",
    ),
    (
        codetype="M",
        identifier=(918, 0, nothing),
        funname="M918",
        doc="    M918(;params...)\nFind L6474 speed threshold\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M918.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* J [Optional]: Select which driver(s) to monitor on a multi-driver axis.\n* X [Optional]: Monitor X with the given displacement (1 - 255mm) on either side of the current position.\n* Y [Optional]: Monitor Y with the given displacement (1 - 255mm) on either side of the current position.\n* Z [Optional]: Monitor Z with the given displacement (1 - 255mm) on either side of the current position.\n* E [Optional]: Monitor E with the given displacement (1 - 255mm) on either side of the current position.\n* I [Optional]: Overcurrent threshold. Report current value from driver if not specified.\n* T [Optional]: Current (mA) setting for TVAL (0 - 4A in 31.25mA increments, rounds down) - L6474 only. Report current value from driver if not specified.\n* K [Optional]: Value for KVAL_HOLD (0 - 255) (ignored for L6474). Report current value from driver if not specified.\n* M [Optional]: Value for microsteps (1 - 128). Report current value from driver if not specified.\n\n\n# Description\n\n`M918`: Increase speed until error or max feedrate achieved.\n\n\nSee also [`M916`](@ref) and [`M917`](@ref).",
    ),
    (
        codetype="M",
        identifier=(919, 0, nothing),
        funname="M919",
        doc="    M919(;params...)\nSet Chopper Timing values for TMC stepper drivers\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M919.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* O [Optional]: Time-Off value (1..15). If omitted, use configured defaults for the axes.\n* P [Optional]: Hysteresis End value (-3..12). If omitted, use configured defaults for the axes.\n* S [Optional]: Hysteresis Start value (1..8). If omitted, use configured defaults for the axes.\n* I [Optional]: Index for multiple steppers. (i.e., `I1` for X2, Y2, Z2; `I2` for Z3; `I3` for Z4). If omitted, all steppers for the selected axes.\n* T [Optional]: Index (tool) number for the E axis. If omitted, all extruders.\n* X [Optional]: Apply the given chopper timing to the X stepper(s).\n* Y [Optional]: Apply the given chopper timing to the Y stepper(s). (Requires 2 or more axes.)\n* Z [Optional]: Apply the given chopper timing to the Z stepper(s). (Requires 3 or more axes.)\n* A [Optional]: Apply the given chopper timing to the A stepper. (Requires 4 or more axes.)\n* B [Optional]: Apply the given chopper timing to the B stepper. (Requires 5 or more axes.)\n* C [Optional]: Apply the given chopper timing to the C stepper. (Requires 6 or more axes.)\n* U [Optional]: Apply the given chopper timing to the U stepper. (Requires 7 or more axes.)\n* V [Optional]: Apply the given chopper timing to the V stepper. (Requires 8 or more axes.)\n* W [Optional]: Apply the given chopper timing to the W stepper. (Requires 9 axes.)\n\n\n# Description\n\nSet / report the TMC Chopper Timing values for one or more stepper drivers.\n",
    ),
    (
        codetype="M",
        identifier=(92, 0, nothing),
        funname="M92",
        doc="    M92(;params...)\nSet the number of steps-per-mm, per-inch, or per-degree\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M092.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* X [Optional]: X steps per unit\n* Y [Optional]: Y steps per unit\n* Z [Optional]: Z steps per unit\n* E [Optional]: E steps per unit\n* T [Optional]: Target extruder (Requires `DISTINCT_E_FACTORS`)\n\n\n# Description\n\nUse [`M92`](/docs/gcode/M092.html) to set the steps-per-unit for one or more axes. This setting affects how many steps will be done for each unit of movement.\n\nUnits will usually be set in steps-per-millimeter unless:\n- The firmware has `INCH_MODE_SUPPORT` enabled and has been set to *Inches Mode* by [`G20`](/docs/gcode/G020.html) or by having inches as the default unit.\n- The machine is a `SCARA` in which case the A and B axes are configured in ***steps-per-degree***, not steps-per-distance.\n",
    ),
    (
        codetype="M",
        identifier=(928, 0, nothing),
        funname="M928",
        doc="    M928(;params...)\nLog serial input to an SD file\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M928.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* filename : File name of log file\n\n\n# Description\n\nUse this command to start logging all console and host input to an SD file while still operating the machine.\n\n\nSee also [`M29`](@ref).",
    ),
    (
        codetype="M",
        identifier=(951, 0, nothing),
        funname="M951",
        doc="    M951(;params...)\nSet / report Magnetic Parking Extruder settings\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M951.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* L [Optional]: Set X[0] position. (Default `PARKING_EXTRUDER_PARKING_X`)\n* R [Optional]: Set X[1] position. (Default `PARKING_EXTRUDER_PARKING_X`)\n* I [Optional]: Set grab distance. (Default `PARKING_EXTRUDER_GRAB_DISTANCE`)\n* J [Optional]: Set slow feedrate. (Default `MPE_SLOW_SPEED`)\n* H [Optional]: Set fast feedrate. (Default `MPE_FAST_SPEED`)\n* D [Optional]: Set travel feedrate. (Default `MPE_TRAVEL_DISTANCE`)\n* C [Optional]: Set compensation factor. (Default `MPE_COMPENSATION`)\n\n\n# Description\n\nSet `MAGNETIC_PARKING_EXTRUDER` settings. With no parameters, report the current settings.\n",
    ),
    (
        codetype="M",
        identifier=(993, 0, nothing),
        funname="M993",
        doc="    M993(;params...)\nload or back up SPI Flash and SD\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M993.html).\n\n\n\n\n# Description\n`M993`: backup SPI Flash to SD\n`M994`: load a backup from SD to SPI Flash\n",
    ),
    (
        codetype="M",
        identifier=(994, 0, nothing),
        funname="M994",
        doc="    M994(;params...)\nload or back up SPI Flash and SD\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M993.html).\n\n\n\n\n# Description\n`M993`: backup SPI Flash to SD\n`M994`: load a backup from SD to SPI Flash\n",
    ),
    (
        codetype="M",
        identifier=(995, 0, nothing),
        funname="M995",
        doc="    M995(;params...)\nTouch screen calibration for TFT display\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M995.html).\n\n\n\n\n# Description\nTrigger touch screen calibration menu on display\n",
    ),
    (
        codetype="M",
        identifier=(997, 0, nothing),
        funname="M997",
        doc="    M997(;params...)\nPerform in-application firmware update\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M997.html).\n\n\n\n\n# Description\n\nCan be used to trigger a firmware update from the SD card after the firmware binary has been uploaded remotely.\n",
    ),
    (
        codetype="M",
        identifier=(999, 0, nothing),
        funname="M999",
        doc="    M999(;params...)\nReturn the machine to Running state\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/M999.html).\n\n\n# Marlin parameters\nNote: these are Marlin's G-Code parameters. GCodes.jl does not inforce them.\n* S : Resume without flushing the command buffer. The default behavior is to flush the serial buffer and request a resend to the host starting on the last `N` line received.\n\n\n# Description\n\nIf a **STOP** occurs you can use [`M999`](/docs/gcode/M999.html) to restart the \"stopped\" machine after resolving the issue.\n\nMarlin will call **STOP** if any error occurs that would make continuing the current process problematic. For example, if the probe fails to deploy, it will abort probing and STOP. Note that this disables all heaters.\n",
    ),
    (
        codetype="T",
        identifier=(0, 0, nothing),
        funname="T0",
        doc="    T0(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
    (
        codetype="T",
        identifier=(1, 0, nothing),
        funname="T1",
        doc="    T1(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
    (
        codetype="T",
        identifier=(2, 0, nothing),
        funname="T2",
        doc="    T2(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
    (
        codetype="T",
        identifier=(3, 0, nothing),
        funname="T3",
        doc="    T3(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
    (
        codetype="T",
        identifier=(4, 0, nothing),
        funname="T4",
        doc="    T4(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
    (
        codetype="T",
        identifier=(5, 0, nothing),
        funname="T5",
        doc="    T5(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
    (
        codetype="T",
        identifier=(6, 0, nothing),
        funname="T6",
        doc="    T6(;params...)\nSwitch to the specified tool\n\n*Note:* This documentation has been automatically generated from [Marlin's G-Code documentation](https://marlinfw.org/docs/gcode/T001-T002.html).\n\n\n\n\n# Description\n`T0`, `T1`, etc. switches to the respective physical/virtual tool head. See [Universal Tool Change Settings](/docs/configuration/configuration.html#universal-tool-change-settings) in `Configuration_adv.h` for more details.\n",
    ),
]
